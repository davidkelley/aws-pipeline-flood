[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "functions/.external-ecmascript.js",
    "static": true,
    "longname": "functions/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "functions/globals.js",
    "content": "/**\n* Determines the level of logging that the function will output. This enables\n* us to reduce the amount of \"noise\" generated by a battle-tested function,\n* whilst enabling us to output additional logging on a new version.\n*\n* Setting `process.env.LOG_LEVEL` will overwrite the default value of `\"info\"`\n* for this variable.\n*\n* @type {String}\n*/\nexport const LOG_LEVEL = (process.env.LOG_LEVEL || 'info');\n\n/**\n * The AWS Region that this Lambda function is currently executing in.\n *\n * _Note: This is normally populated by the Lambda execution environment._\n *\n * @type {String}\n */\nexport const AWS_REGION = process.env.AWS_REGION;\n\n\n/**\n * The secret API Key used to communicate with the Flood.IO account\n *\n * @type {String}\n */\nexport const FLOOD_API_KEY = process.env.FLOOD_API_KEY;\n\n/**\n * The URL used to communicate with the Flood.IO API\n *\n * @type {String}\n */\nexport const FLOOD_API_URI = 'https://api.flood.io/';\n\n/**\n * The path used for sending requests to action Floods\n *\n * @type {String}\n */\nexport const FLOODS_PATH = 'floods';\n\n/**\n * The path used for sending requests to action Grids\n *\n * @type {String}\n */\nexport const GRIDS_PATH = 'grids';\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/globals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "LOG_LEVEL",
    "memberof": "functions/globals.js",
    "static": true,
    "longname": "functions/globals.js~LOG_LEVEL",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/globals.js",
    "importStyle": "{LOG_LEVEL}",
    "description": "Determines the level of logging that the function will output. This enables\nus to reduce the amount of \"noise\" generated by a battle-tested function,\nwhilst enabling us to output additional logging on a new version.\n\nSetting `process.env.LOG_LEVEL` will overwrite the default value of `\"info\"`\nfor this variable.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "AWS_REGION",
    "memberof": "functions/globals.js",
    "static": true,
    "longname": "functions/globals.js~AWS_REGION",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/globals.js",
    "importStyle": "{AWS_REGION}",
    "description": "The AWS Region that this Lambda function is currently executing in.\n\n_Note: This is normally populated by the Lambda execution environment._",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "FLOOD_API_KEY",
    "memberof": "functions/globals.js",
    "static": true,
    "longname": "functions/globals.js~FLOOD_API_KEY",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/globals.js",
    "importStyle": "{FLOOD_API_KEY}",
    "description": "The secret API Key used to communicate with the Flood.IO account",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "FLOOD_API_URI",
    "memberof": "functions/globals.js",
    "static": true,
    "longname": "functions/globals.js~FLOOD_API_URI",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/globals.js",
    "importStyle": "{FLOOD_API_URI}",
    "description": "The URL used to communicate with the Flood.IO API",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "FLOODS_PATH",
    "memberof": "functions/globals.js",
    "static": true,
    "longname": "functions/globals.js~FLOODS_PATH",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/globals.js",
    "importStyle": "{FLOODS_PATH}",
    "description": "The path used for sending requests to action Floods",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "GRIDS_PATH",
    "memberof": "functions/globals.js",
    "static": true,
    "longname": "functions/globals.js~GRIDS_PATH",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/globals.js",
    "importStyle": "{GRIDS_PATH}",
    "description": "The path used for sending requests to action Grids",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "functions/logger.js",
    "content": "import Bunyan from 'bunyan';\n\nimport { LOG_LEVEL } from './globals';\n\n/**\n * Custom serializer for errors that are thrown by the Error library\n * that this function utilizes.\n */\nconst ErrorSerializer = (err) => {\n  const { message, name, type, origMessage, code = {} } = err;\n  return { message, name, type, origMessage, detail: code };\n};\n\n/**\n * The options that the logger is initialised with.\n *\n * @see https://github.com/trentm/node-bunyan\n */\nconst options = {\n  name: 'pipeline-flood',\n  level: LOG_LEVEL,\n  serializers: {\n    err: ErrorSerializer,\n  },\n};\n\n/**\n * @external {Logger} https://github.com/trentm/node-bunyan\n */\nconst Logger = Bunyan.createLogger(options);\n\nexport default Logger;\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "ErrorSerializer",
    "memberof": "functions/logger.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/logger.js~ErrorSerializer",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/logger.js",
    "importStyle": null,
    "description": "Custom serializer for errors that are thrown by the Error library\nthat this function utilizes.",
    "lineNumber": 9,
    "params": [
      {
        "name": "err",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"message\": *, \"name\": *, \"type\": *, \"origMessage\": *, \"detail\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "options",
    "memberof": "functions/logger.js",
    "static": true,
    "longname": "functions/logger.js~options",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/logger.js",
    "importStyle": null,
    "description": "The options that the logger is initialised with.",
    "see": [
      "https://github.com/trentm/node-bunyan"
    ],
    "lineNumber": 19,
    "type": {
      "types": [
        "{\"name\": string, \"level\": *, \"serializers\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "Logger",
    "externalLink": "https://github.com/trentm/node-bunyan",
    "memberof": "functions/logger.js",
    "static": true,
    "longname": "functions/logger.js~Logger",
    "access": "public",
    "description": "",
    "lineNumber": 30
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "functions/pipeline/pipeline/artifact.js",
    "content": "import fs from 'fs';\nimport uuid from 'uuid/v4';\nimport Path from 'path';\nimport extract from 'extract-zip';\nimport { S3 } from 'aws-sdk';\nimport wrappedError from 'error/wrapped';\nimport typedError from 'error/typed';\n\nimport { AWS_REGION } from '../../globals';\n\n/**\n * An error was encountered when attempting to download, commit and uncompress\n * the remote CodePipeline artifact.\n *\n * @type {Error}\n */\nconst readyError = wrappedError({\n  message: 'Error occurred retrieving artifact',\n  type: 'pipeline.artifact',\n});\n\n/**\n * The remote artifact could not be retrieved (S3 Error).\n *\n * @type {Error}\n */\nconst fetchError = wrappedError({\n  message: 'Could not retrieve artifact.',\n  type: 'pipeline.artifact.file',\n});\n\n/**\n * An error was encountered whilst attempting to read a file from inside the\n * artifact.\n *\n * @type {Error}\n */\nconst readError = wrappedError({\n  message: 'Could not read artifact file \"{filename}\"',\n  type: 'pipeline.artifact.file',\n});\n\n/**\n * The artifact was successfully downloaded, but an error occurred whilst\n * attempting to decompress it.\n *\n * @type {Error}\n */\nconst decompressionError = wrappedError({\n  message: 'Failed to decompress artifact.',\n  type: 'pipeline.artifact.file.decompression',\n});\n\n/**\n * The JSON key does not exist in the file.\n *\n * @type {Error}\n */\nconst keyNotFoundError = typedError({\n  message: 'Key \"{key}\" not found in file \"{filename}\"',\n  type: 'pipeline.artifact.file.json',\n});\n\n/**\n * This class handles retrieving CodePipeline artifact files as well as accessing\n * file contents in addition to attributes defined inside JSON files residing\n * within the artifact.\n *\n * As the artifacts passed to the function may reside within remote buckets which\n * this function does not have sufficient permissions to access, credentials are\n * used from the initial CodePipeline event object.\n */\nexport default class Artifact {\n  /**\n   * Constructs a new Artifact instance.\n   *\n   * @param {Object} s3Location - object representing a remote S3 location\n   * @param {String} s3Location.bucketName - the name of the S3 bucket.\n   * @param {String} s3Location.objectKey - the key of the file inside the S3 bucket.\n   */\n  constructor({ bucketName, objectKey }, { secretAccessKey, sessionToken, accessKeyId }) {\n    /**\n     * A local ID for this artifact.\n     *\n     * @type {String}\n     */\n    this.id = uuid();\n    /**\n     * A filename representing the name of the artifact once downloaded and stored\n     * locally.\n     *\n     * @type {String}\n     */\n    this.filename = `${this.id}.zip`;\n    /**\n     * A fully resolved Path to the local artifact when downloaded and written\n     * to the `/tmp/` directory.\n     *\n     * @type {String}\n     */\n    this.filepath = Path.join('/tmp/', this.filename);\n    /**\n     * A fully resolved path to the directory storing the decompressed contents\n     * of the remote artifact in the `/tmp` directory.\n     *\n     * @type {String}\n     */\n    this.dir = Path.join('/tmp/', this.id);\n    /**\n     * The name of the S3 bucket which the remote artifact file resides in.\n     *\n     * @type {String}\n     */\n    this.bucketName = bucketName;\n    /**\n     * The key for the remote artifact file.\n     *\n     * @type {String}\n     */\n    this.objectKey = objectKey;\n    /**\n     * The AWS Secret Access Key which will be used to retrieve the remote artifact.\n     *\n     * @type {String}\n     */\n    this.secretAccessKey = secretAccessKey;\n    /**\n     * The AWS Session Token which will be used to retrieve the remote artifact.\n     *\n     * @type {String}\n     */\n    this.sessionToken = sessionToken;\n    /**\n     * The AWS Access Key ID which will be used to retrieve the remote artifact.\n     *\n     * @type {String}\n     */\n    this.accessKeyId = accessKeyId;\n    /**\n     * Determines if this artifact has been retrieved, decompressed and\n     * written to local file storage.\n     *\n     * @type {Boolean}\n     */\n    this.isReady = false;\n  }\n\n  /**\n   * Transform the properties received from CodePipeline into a new instance\n   * of this class.\n   *\n   * This function maps the required properties from the CodePipeline invocation\n   * event structure.\n   *\n   * @return {Artifact} a new artifact file with correctly mapped parameters.\n   */\n  static toArtifact(artifact, credentials = {}) {\n    const { location: { s3Location } } = artifact;\n    return new Artifact(s3Location, credentials);\n  }\n\n  /**\n   * Returns an array which can be used to constuct a Map of artifacts.\n   *\n   * @return {Array[String, Artifact]}\n   */\n  static toArtifactMapEntry(artifact, credentials) {\n    return [artifact.name, Artifact.toArtifact(artifact, credentials)];\n  }\n\n  /**\n   * A utility function to ensure that this artifact has first retrived and\n   * decompressed the remote artifact file, before any attempts are made\n   * to retrieve artifact contents.\n   *\n   * @return {Boolean} true if ready, false otherwise.\n   */\n  async ready() {\n    try {\n      if (!this.isReady) {\n        const data = await this.fetch();\n        await this.write(data);\n        await this.unzip();\n        this.isReady = true;\n      }\n      return this.isReady;\n    } catch (err) {\n      throw readyError(err);\n    }\n  }\n\n  /**\n   * Once {@link Artifact#ready} has resolved successfully, this function\n   * can be used to retrieve a specific file's contents from within the\n   * decompressed artifact.\n   *\n   * @return {Buffer} a utf-8 buffer of the file's contents.\n   */\n  get(filename) {\n    try {\n      const { dir } = this;\n      const path = Path.join(dir, filename);\n      return fs.readFileSync(path, { encoding: 'utf8' });\n    } catch (err) {\n      throw readError(err, { filename });\n    }\n  }\n\n  /**\n   * Once {@link Artifact#ready} has resolved successfully, this function\n   * can be used to retrieve the value of a specific property key from within\n   * a JSON file residing inside the decompressed artifact.\n   *\n   * @return [String] the value of the key from within a JSON file.\n   */\n  attribute(filename, key) {\n    try {\n      const obj = JSON.parse(this.get(filename));\n      if (!Object.keys(obj).includes(key)) {\n        throw keyNotFoundError({ filename, key });\n      } else {\n        return obj[key];\n      }\n    } catch (err) {\n      throw readError(err, { filename });\n    }\n  }\n\n  /**\n   * @private\n   *\n   * Assuming that the remote artifact has been downloaded and written to\n   * {@link Artifact#filepath}, attempt to extract the contents of the artifact\n   * into {@link Artifact#dir}.\n   *\n   * @return {Boolean} true once contents have been successfully decompressed.\n   */\n  unzip() {\n    return new Promise((resolve, reject) => {\n      const { filepath, dir } = this;\n      fs.mkdirSync(dir);\n      extract(filepath, { dir }, (err) => {\n        if (err) {\n          reject(decompressionError(err));\n        } else {\n          resolve(true);\n        }\n      });\n    });\n  }\n\n  /**\n   * @private\n   *\n   * Write the contents of the compressed, remote artifact to {@link Artifact#filepath}.\n   *\n   * @return {Boolean} true once the file has been written.\n   */\n  async write(data) {\n    const { filepath } = this;\n    fs.writeFileSync(filepath, data, { encoding: 'utf8' });\n    return true;\n  }\n\n  /**\n   * @private\n   *\n   * Using the S3 client ({@link Artifact#client}) retrieve the artifact from\n   * the remote S3 bucket.\n   *\n   * @return {Buffer} the buffer contents of the remote artifacts retrieved from S3.\n   */\n  async fetch() {\n    try {\n      const { bucketName, objectKey } = this;\n      const params = { Bucket: bucketName, Key: objectKey };\n      const { Body } = await this.client.getObject(params).promise();\n      return Body;\n    } catch (err) {\n      throw fetchError(err);\n    }\n  }\n\n  /**\n   * Returns a new S3 client with credentials pre-configured.\n   *\n   * @type {S3}\n   */\n  get client() {\n    const { secretAccessKey, sessionToken, accessKeyId } = this;\n    return new S3({ region: AWS_REGION, accessKeyId, secretAccessKey, sessionToken });\n  }\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/pipeline/pipeline/artifact.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "readyError",
    "memberof": "functions/pipeline/pipeline/artifact.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/artifact.js~readyError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/artifact.js",
    "importStyle": null,
    "description": "An error was encountered when attempting to download, commit and uncompress\nthe remote CodePipeline artifact.",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "fetchError",
    "memberof": "functions/pipeline/pipeline/artifact.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/artifact.js~fetchError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/artifact.js",
    "importStyle": null,
    "description": "The remote artifact could not be retrieved (S3 Error).",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "readError",
    "memberof": "functions/pipeline/pipeline/artifact.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/artifact.js~readError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/artifact.js",
    "importStyle": null,
    "description": "An error was encountered whilst attempting to read a file from inside the\nartifact.",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "decompressionError",
    "memberof": "functions/pipeline/pipeline/artifact.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/artifact.js~decompressionError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/artifact.js",
    "importStyle": null,
    "description": "The artifact was successfully downloaded, but an error occurred whilst\nattempting to decompress it.",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "keyNotFoundError",
    "memberof": "functions/pipeline/pipeline/artifact.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/artifact.js~keyNotFoundError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/artifact.js",
    "importStyle": null,
    "description": "The JSON key does not exist in the file.",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "class",
    "name": "Artifact",
    "memberof": "functions/pipeline/pipeline/artifact.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/artifact.js",
    "importStyle": "Artifact",
    "description": "This class handles retrieving CodePipeline artifact files as well as accessing\nfile contents in addition to attributes defined inside JSON files residing\nwithin the artifact.\n\nAs the artifacts passed to the function may reside within remote buckets which\nthis function does not have sufficient permissions to access, credentials are\nused from the initial CodePipeline event object.",
    "lineNumber": 73,
    "interface": false
  },
  {
    "__docId__": 66,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#constructor",
    "access": "public",
    "description": "Constructs a new Artifact instance.",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "s3Location",
        "description": "object representing a remote S3 location"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "s3Location.bucketName",
        "description": "the name of the S3 bucket."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "s3Location.objectKey",
        "description": "the key of the file inside the S3 bucket."
      }
    ]
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "id",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#id",
    "access": "public",
    "description": "A local ID for this artifact.",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "filename",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#filename",
    "access": "public",
    "description": "A filename representing the name of the artifact once downloaded and stored\nlocally.",
    "lineNumber": 94,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "filepath",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#filepath",
    "access": "public",
    "description": "A fully resolved Path to the local artifact when downloaded and written\nto the `/tmp/` directory.",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "dir",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#dir",
    "access": "public",
    "description": "A fully resolved path to the directory storing the decompressed contents\nof the remote artifact in the `/tmp` directory.",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "bucketName",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#bucketName",
    "access": "public",
    "description": "The name of the S3 bucket which the remote artifact file resides in.",
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "objectKey",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#objectKey",
    "access": "public",
    "description": "The key for the remote artifact file.",
    "lineNumber": 120,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "secretAccessKey",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#secretAccessKey",
    "access": "public",
    "description": "The AWS Secret Access Key which will be used to retrieve the remote artifact.",
    "lineNumber": 126,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "sessionToken",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#sessionToken",
    "access": "public",
    "description": "The AWS Session Token which will be used to retrieve the remote artifact.",
    "lineNumber": 132,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "accessKeyId",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#accessKeyId",
    "access": "public",
    "description": "The AWS Access Key ID which will be used to retrieve the remote artifact.",
    "lineNumber": 138,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "isReady",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#isReady",
    "access": "public",
    "description": "Determines if this artifact has been retrieved, decompressed and\nwritten to local file storage.",
    "lineNumber": 145,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "toArtifact",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact.toArtifact",
    "access": "public",
    "description": "Transform the properties received from CodePipeline into a new instance\nof this class.\n\nThis function maps the required properties from the CodePipeline invocation\nevent structure.",
    "lineNumber": 157,
    "return": {
      "nullable": null,
      "types": [
        "Artifact"
      ],
      "spread": false,
      "description": "a new artifact file with correctly mapped parameters."
    },
    "params": [
      {
        "name": "artifact",
        "types": [
          "*"
        ]
      },
      {
        "name": "credentials",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ]
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "toArtifactMapEntry",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact.toArtifactMapEntry",
    "access": "public",
    "description": "Returns an array which can be used to constuct a Map of artifacts.",
    "lineNumber": 167,
    "return": {
      "nullable": null,
      "types": [
        "Array[String, Artifact]"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "artifact",
        "types": [
          "*"
        ]
      },
      {
        "name": "credentials",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "ready",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#ready",
    "access": "public",
    "description": "A utility function to ensure that this artifact has first retrived and\ndecompressed the remote artifact file, before any attempts are made\nto retrieve artifact contents.",
    "lineNumber": 178,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true if ready, false otherwise."
    },
    "params": []
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "get",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#get",
    "access": "public",
    "description": "Once {@link Artifact#ready} has resolved successfully, this function\ncan be used to retrieve a specific file's contents from within the\ndecompressed artifact.",
    "lineNumber": 199,
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "a utf-8 buffer of the file's contents."
    },
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "attribute",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#attribute",
    "access": "public",
    "description": "Once {@link Artifact#ready} has resolved successfully, this function\ncan be used to retrieve the value of a specific property key from within\na JSON file residing inside the decompressed artifact.",
    "lineNumber": 216,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "[String] the value of the key from within a JSON file."
    },
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "unzip",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#unzip",
    "access": "private",
    "description": "",
    "lineNumber": 238,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true once contents have been successfully decompressed."
    },
    "params": []
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "write",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#write",
    "access": "private",
    "description": "",
    "lineNumber": 259,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true once the file has been written."
    },
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "fetch",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#fetch",
    "access": "private",
    "description": "",
    "lineNumber": 273,
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "the buffer contents of the remote artifacts retrieved from S3."
    },
    "params": []
  },
  {
    "__docId__": 86,
    "kind": "get",
    "name": "client",
    "memberof": "functions/pipeline/pipeline/artifact.js~Artifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/artifact.js~Artifact#client",
    "access": "public",
    "description": "Returns a new S3 client with credentials pre-configured.",
    "lineNumber": 289,
    "type": {
      "nullable": null,
      "types": [
        "S3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "functions/pipeline/pipeline/constants.js",
    "content": "/**\n * Configures the S3 Bucket name of where Flood.IO flood files (ie. .jmx) files\n * will be stored.\n *\n * @type {String}\n */\nexport const FILE_BUCKET = process.env.FILE_BUCKET;\n\n/**\n * Configures the AWS ARN of an AWS Step Functions state machine.\n *\n * Note this value is typically configured inside the Lambda function.\n *\n * @type {String}\n */\nexport const STATE_MACHINE = process.env.STATE_MACHINE;\n\n/**\n * Indicates that the State Machine execution has completed successfully.\n *\n * @type {String}\n */\nexport const SUCCEEDED = 'SUCCEEDED';\n\n/**\n * Indicates that the State Machine execution status is currently running.\n *\n * @type {String}\n */\nexport const RUNNING = 'RUNNING';\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/pipeline/pipeline/constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "FILE_BUCKET",
    "memberof": "functions/pipeline/pipeline/constants.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/constants.js~FILE_BUCKET",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/constants.js",
    "importStyle": "{FILE_BUCKET}",
    "description": "Configures the S3 Bucket name of where Flood.IO flood files (ie. .jmx) files\nwill be stored.",
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "STATE_MACHINE",
    "memberof": "functions/pipeline/pipeline/constants.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/constants.js~STATE_MACHINE",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/constants.js",
    "importStyle": "{STATE_MACHINE}",
    "description": "Configures the AWS ARN of an AWS Step Functions state machine.\n\nNote this value is typically configured inside the Lambda function.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "SUCCEEDED",
    "memberof": "functions/pipeline/pipeline/constants.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/constants.js~SUCCEEDED",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/constants.js",
    "importStyle": "{SUCCEEDED}",
    "description": "Indicates that the State Machine execution has completed successfully.",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "RUNNING",
    "memberof": "functions/pipeline/pipeline/constants.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/constants.js~RUNNING",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/constants.js",
    "importStyle": "{RUNNING}",
    "description": "Indicates that the State Machine execution status is currently running.",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "functions/pipeline/pipeline/parameters/parameters.js",
    "content": "import wrappedError from 'error/wrapped';\nimport typedError from 'error/typed';\n\n/**\n * An unsupported parameter value object was encountered.\n *\n * @type {Error}\n */\nconst artifactParameterError = typedError({\n  message: 'Unsupported object in \"{key}\"',\n  type: 'pipeline.parameters',\n});\n\n/**\n * The remote artifact could not be retrieved.\n *\n * @type {Error}\n */\nconst remoteArtifactError = wrappedError({\n  message: 'Failed to retrieve remote artifact \"{path}\"',\n  type: 'pipeline.artifact.remote',\n});\n\n/**\n * The remote artifact file did not contain a truthy key value.\n *\n * @type {Error}\n */\nconst remoteArtifactValueError = wrappedError({\n  message: 'Value was null or undefined for \"{path}\"',\n  type: 'pipeline.artifact.value',\n});\n\n/**\n * The defined remote artifact does not exist or access has not been granted.\n *\n * @type {Error}\n */\nconst artifactNotFound = typedError({\n  message: 'Artifact \"{artifactName}\" not a valid InputArtifact',\n  type: 'pipeline.artifact.not_found',\n});\n\n/**\n * Enables the defining of parameters which are passed as overrides to the\n * flood files which are sent to Flood.IO.\n *\n * Parameters can be defined as a static string or as an object containing\n * the \"Fn::GetParam\" key, which behaves in a similar fashion to the\n * CloudFormation parameter overrides function.\n */\nexport default class Parameters {\n  /**\n   * Constructs a new Parameter instance.\n   *\n   * @param {Object[String, String, Object]} parameters - an object denoting all\n   *  parameters which are to be sent to all Flood files. The values inside\n   *  this object can either be static strings, or objects containing keys\n   *  to retrieve values from artifact files.\n   * @param {Array[Artifact]} artifacts - an array of {@link Artifact} instances.\n   */\n  constructor(parameters, artifacts) {\n    /**\n     * An array of parameter overrides as either a static string or an object\n     * containing a Fn::GetParam key.\n     *\n     * @type {Array[String, Object]}\n     */\n    this.parameters = parameters;\n    /**\n     * An object containing {@link Artifact} instances, with the keys denoting\n     * the logical name of the artifact inside CodePipeline.\n     *\n     * @type {Object}\n     */\n    this.artifacts = artifacts;\n  }\n\n  /**\n   * Convert all parameters to their resolves keys and values.\n   *\n   * @return {Object}\n   */\n  async toObject() {\n    const entries = await Promise.all(this.toEntries());\n    return entries.reduce((memo, [key, val]) => {\n      const obj = memo;\n      obj[key] = val;\n      return memo;\n    }, {});\n  }\n\n  /**\n   * @private\n   *\n   * Map all parameter keys to their respective resolved values and return an\n   * array of keys & value tuples.\n   *\n   * Note that this method returns an array of promises.\n   *\n   * @return {Array[Array[String, String]]} an array of iterable entries.\n   */\n  toEntries() {\n    return Object.keys(this.parameters).map(async (key) => {\n      const obj = this.parameters[key];\n      if (typeof obj === 'string') {\n        return [key, obj];\n      }\n      const properties = obj['Fn::GetParam'];\n      if (!properties) {\n        throw artifactParameterError({ key });\n      } else {\n        try {\n          const val = await this.fetch(...properties);\n          return [key, val];\n        } catch (err) {\n          throw remoteArtifactError(err, {\n            path: properties.join('::'),\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Fetch the value of a specific parameter using the key found inside a json file\n   * inside the specific artifact.\n   *\n   * @param {String} artifactName - the name of the artifact the file resides in.\n   * @param {String} filename - The name of the JSON file inside the artifact\n   * @param {String} key - The property key inside the JSON file\n   *\n   * @return {String} the value of the key inside the JSON file, inside the artifact.\n   */\n  async fetch(artifactName, filename, key) {\n    const artifact = this.artifacts[artifactName];\n    if (!artifact) {\n      throw artifactNotFound({ artifactName });\n    } else {\n      await artifact.ready();\n      const value = artifact.attribute(filename, key);\n      if (!value) {\n        throw remoteArtifactValueError({\n          path: `${artifactName}::${filename}::${key}`,\n        });\n      } else {\n        return value;\n      }\n    }\n  }\n\n  /**\n   * Transforms all parameters to a Flood.IO compatible parameter overrides\n   * string.\n   *\n   * This function will first resolve all functions with a call to {@link Parameters#toObject}.\n   *\n   * @return {String} a Java parameter overrides string in the form `-Dkey=\"val\"`.\n   */\n  async toOverrides() {\n    const obj = await this.toObject();\n    return Object.keys(obj).map(key => `-D${key}=\"${obj[key]}\"`).join(' ');\n  }\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/pipeline/pipeline/parameters/parameters.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "artifactParameterError",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~artifactParameterError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/parameters/parameters.js",
    "importStyle": null,
    "description": "An unsupported parameter value object was encountered.",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "remoteArtifactError",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~remoteArtifactError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/parameters/parameters.js",
    "importStyle": null,
    "description": "The remote artifact could not be retrieved.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "remoteArtifactValueError",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~remoteArtifactValueError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/parameters/parameters.js",
    "importStyle": null,
    "description": "The remote artifact file did not contain a truthy key value.",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "artifactNotFound",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~artifactNotFound",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/parameters/parameters.js",
    "importStyle": null,
    "description": "The defined remote artifact does not exist or access has not been granted.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "class",
    "name": "Parameters",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~Parameters",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/parameters/parameters.js",
    "importStyle": "Parameters",
    "description": "Enables the defining of parameters which are passed as overrides to the\nflood files which are sent to Flood.IO.\n\nParameters can be defined as a static string or as an object containing\nthe \"Fn::GetParam\" key, which behaves in a similar fashion to the\nCloudFormation parameter overrides function.",
    "lineNumber": 52,
    "interface": false
  },
  {
    "__docId__": 98,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js~Parameters",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~Parameters#constructor",
    "access": "public",
    "description": "Constructs a new Parameter instance.",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object[String, String, Object]"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": "an object denoting all\n parameters which are to be sent to all Flood files. The values inside\n this object can either be static strings, or objects containing keys\n to retrieve values from artifact files."
      },
      {
        "nullable": null,
        "types": [
          "Array[Artifact]"
        ],
        "spread": false,
        "optional": false,
        "name": "artifacts",
        "description": "an array of {@link Artifact} instances."
      }
    ]
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "parameters",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js~Parameters",
    "static": false,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~Parameters#parameters",
    "access": "public",
    "description": "An array of parameter overrides as either a static string or an object\ncontaining a Fn::GetParam key.",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "Array[String, Object]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "artifacts",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js~Parameters",
    "static": false,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~Parameters#artifacts",
    "access": "public",
    "description": "An object containing {@link Artifact} instances, with the keys denoting\nthe logical name of the artifact inside CodePipeline.",
    "lineNumber": 76,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "toObject",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js~Parameters",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~Parameters#toObject",
    "access": "public",
    "description": "Convert all parameters to their resolves keys and values.",
    "lineNumber": 84,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "toEntries",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js~Parameters",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~Parameters#toEntries",
    "access": "private",
    "description": "",
    "lineNumber": 103,
    "return": {
      "nullable": null,
      "types": [
        "Array[Array[String, String]]"
      ],
      "spread": false,
      "description": "an array of iterable entries."
    },
    "params": []
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "fetch",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js~Parameters",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~Parameters#fetch",
    "access": "public",
    "description": "Fetch the value of a specific parameter using the key found inside a json file\ninside the specific artifact.",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "artifactName",
        "description": "the name of the artifact the file resides in."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "The name of the JSON file inside the artifact"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The property key inside the JSON file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "the value of the key inside the JSON file, inside the artifact."
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "toOverrides",
    "memberof": "functions/pipeline/pipeline/parameters/parameters.js~Parameters",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/parameters/parameters.js~Parameters#toOverrides",
    "access": "public",
    "description": "Transforms all parameters to a Flood.IO compatible parameter overrides\nstring.\n\nThis function will first resolve all functions with a call to {@link Parameters#toObject}.",
    "lineNumber": 160,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "a Java parameter overrides string in the form `-Dkey=\"val\"`."
    },
    "params": []
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "functions/pipeline/pipeline/resume.js",
    "content": "import { StepFunctions } from 'aws-sdk';\nimport wrappedError from 'error/wrapped';\n\nimport { AWS_REGION } from '../../globals';\nimport { RUNNING, SUCCEEDED } from './constants';\n\n/**\n * An error occurred whilst attempting to fetch execution status, or determining\n * the state of execution.\n *\n * @type {Error}\n */\nconst resumeError = wrappedError({\n  message: 'Failure whilst attempting to resume pipeline execution.',\n  type: 'pipeline',\n});\n\n/**\n * Handle retrieving the current execution status of the state machine, handling\n * the Flood.IO flood.\n *\n * If a terminal status is retrieved, the {@link Resume#perform} function will\n * resolve to be false, indicating that the action has completed (either successfully\n * or otherwise).\n */\nexport default class Resume {\n  /**\n   * Determines if a CodePipeline action step needs to continue resuming, or if\n   * execution has completed.\n   *\n   * @param {String} executionArn - the AWS ARN of a Step Functions state machine.\n   */\n  constructor(executionArn) {\n    /**\n     * The ARN representing the step functions execution Arn.\n     *\n     * @type {String}\n     */\n    this.executionArn = executionArn;\n  }\n\n  /**\n   * Determine the current status of the Step Functions Flood.IO execution.\n   *\n   * If a terminal status is retrieved, then the function will either return false\n   * as well as a summary execution message, or throw an error if the state machine\n   * exited on an error.\n   *\n   * If the status indicates the state machine is still executing, then this\n   * function will resolve to true.\n   *\n   * @return {Array[Boolean, String]} false and a summary message if execution\n   *   has finished successfully, true if execution is ongoing.\n   */\n  async perform() {\n    try {\n      const { status, message = '' } = await this.status();\n      if (status !== RUNNING) {\n        if (status !== SUCCEEDED) {\n          throw new Error(`State machine executed with status of: \"${status}\"`);\n        } else {\n          return { resume: false, message };\n        }\n      } else {\n        return { resume: true, message };\n      }\n    } catch (err) {\n      throw resumeError(err);\n    }\n  }\n\n  /**\n   * Retrieve the status of a step functions execution.\n   *\n   * @return {Object} an object containing the status and a summary of the execution.\n   */\n  async status() {\n    const { executionArn } = this;\n    const stepfunctions = new StepFunctions({ region: AWS_REGION });\n    const describe = stepfunctions.describeExecution({ executionArn }).promise();\n    const { status, output: message } = await describe;\n    return { status, message };\n  }\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/pipeline/pipeline/resume.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "resumeError",
    "memberof": "functions/pipeline/pipeline/resume.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/resume.js~resumeError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/resume.js",
    "importStyle": null,
    "description": "An error occurred whilst attempting to fetch execution status, or determining\nthe state of execution.",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "Resume",
    "memberof": "functions/pipeline/pipeline/resume.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/resume.js~Resume",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/resume.js",
    "importStyle": "Resume",
    "description": "Handle retrieving the current execution status of the state machine, handling\nthe Flood.IO flood.\n\nIf a terminal status is retrieved, the {@link Resume#perform} function will\nresolve to be false, indicating that the action has completed (either successfully\nor otherwise).",
    "lineNumber": 26,
    "interface": false
  },
  {
    "__docId__": 108,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "functions/pipeline/pipeline/resume.js~Resume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/resume.js~Resume#constructor",
    "access": "public",
    "description": "Determines if a CodePipeline action step needs to continue resuming, or if\nexecution has completed.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "executionArn",
        "description": "the AWS ARN of a Step Functions state machine."
      }
    ]
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "executionArn",
    "memberof": "functions/pipeline/pipeline/resume.js~Resume",
    "static": false,
    "longname": "functions/pipeline/pipeline/resume.js~Resume#executionArn",
    "access": "public",
    "description": "The ARN representing the step functions execution Arn.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "perform",
    "memberof": "functions/pipeline/pipeline/resume.js~Resume",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/resume.js~Resume#perform",
    "access": "public",
    "description": "Determine the current status of the Step Functions Flood.IO execution.\n\nIf a terminal status is retrieved, then the function will either return false\nas well as a summary execution message, or throw an error if the state machine\nexited on an error.\n\nIf the status indicates the state machine is still executing, then this\nfunction will resolve to true.",
    "lineNumber": 55,
    "return": {
      "nullable": null,
      "types": [
        "Array[Boolean, String]"
      ],
      "spread": false,
      "description": "false and a summary message if execution\n  has finished successfully, true if execution is ongoing."
    },
    "params": []
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "status",
    "memberof": "functions/pipeline/pipeline/resume.js~Resume",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/resume.js~Resume#status",
    "access": "public",
    "description": "Retrieve the status of a step functions execution.",
    "lineNumber": 77,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "an object containing the status and a summary of the execution."
    },
    "params": []
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "functions/pipeline/pipeline/start.js",
    "content": "import { StepFunctions } from 'aws-sdk';\nimport typedError from 'error/typed';\nimport wrappedError from 'error/wrapped';\n\n// import Logger from '../../logger';\nimport { AWS_REGION } from '../../globals';\nimport { STATE_MACHINE } from './constants';\n\nimport Uploader from './uploader';\nimport Artifact from './artifact';\nimport Parameters from './parameters';\nimport validate from './validate';\n\n/**\n * A validation error was encountered\n *\n * @type {Error}\n */\nconst inputArtifactsError = typedError({\n  message: 'No InputArtifacts defined.',\n  type: 'pipeline.start',\n});\n\n/**\n * A validation error was encountered\n *\n * @type {Error}\n */\nconst executionError = wrappedError({\n  message: 'State machine could not be executed. ({arn})',\n  type: 'pipeline.start.execution',\n});\n\n/**\n * Handles initiating the execution of a Step Functions state machine, which handles\n * starting a Flood.IO load test.\n *\n * This class uses the object received from CodePipeline to resolve UserParameter\n * remote references and forms the input payload.\n */\nexport default class Start {\n  /**\n   * Starts a new execution of a Step Functions state machine by validating any\n   * configuration and resolving remote artifact references for flood files as well\n   * as any artifact parameters.\n   *\n   * @example\n   * ```\n   *  {\n   *     \"CodePipeline.job\": {\n   *         \"id\": \"11111111-abcd-1111-abcd-111111abcdef\",\n   *         \"accountId\": \"111111111111\",\n   *         \"data\": {\n   *             \"actionConfiguration\": {\n   *                 \"configuration\": {\n   *                     \"FunctionName\": \"MyLambdaFunctionForAWSCodePipeline\",\n   *                     \"UserParameters\": \"some-input-such-as-a-URL\"\n   *                 }\n   *             },\n   *             \"inputArtifacts\": [\n   *                 {\n   *                     \"location\": {\n   *                         \"s3Location\": {\n<<<<<<< HEAD\n   *                             \"bucketName\": \"codepipeline-us-east-2-1234567890\",\n   *                             \"objectKey\": \"frj9q0j09aj09j.zip\"\n=======\n   *                             \"bucketName\": \"the name of the bucket configured as the pipeline\" +\n   *                                  \"artifact store in Amazon S3,\" +\n   *                                  \"for example codepipeline-us-east-2-1234567890\",\n   *                             \"objectKey\": \"the name of the application,\" +\n   *                                  \"for example CodePipelineDemoApplication.zip\"\n>>>>>>> ad649bc7c07cd9a69a6d2b944ff42280c3a740c8\n   *                         },\n   *                         \"type\": \"S3\"\n   *                     },\n   *                     \"revision\": null,\n   *                     \"name\": \"ArtifactName\"\n   *                 }\n   *             ],\n   *             \"outputArtifacts\": [],\n   *             \"artifactCredentials\": {\n   *                 \"secretAccessKey\": \"....\",\n   *                 \"sessionToken\": \"....\",\n   *                 \"accessKeyId\": \"....\"\n   *             },\n   *             \"continuationToken\": \"A continuation token if continuing job\"\n   *         }\n   *     }\n   *  }\n   * ```\n   *\n   * @param {Object} data - A CodePipeline data event object.\n   */\n  constructor({ data }) {\n    /**\n     * The data object as received from AWS CodePipeline.\n     *\n     * @type {Object}\n     */\n    this.data = data;\n    /**\n     * The parsed contents of the `UserParameters` string as defined inside the\n     * action in the CodePipeline resource.\n     *\n     * @type {Object}\n     */\n    this.parameters = JSON.parse(this.data.actionConfiguration.configuration.UserParameters);\n    const inputs = data.inputArtifacts;\n    if (!inputs || inputs.length === 0) {\n      throw inputArtifactsError({});\n    }\n    const mapper = a => Artifact.toArtifactMapEntry(a, data.artifactCredentials);\n    /**\n     * An array of {@link Artifact} objects which have been made available to\n     * the CodePipeline action definition.\n     *\n     * These artifacts may be referenced by Parameters (Fn::GetParam keys)\n     * as well as Files to be uploaded to Flood.IO.\n     *\n     * @type {String}\n     */\n    this.artifacts = inputs.map(mapper).reduce((memo, [key, val]) => {\n      const obj = memo;\n      obj[key] = val;\n      return obj;\n    }, {});\n  }\n\n  /**\n   * Retrieve validated (and defaulted) parameters which have been defined inside\n   * the action in the CodePipeline resource.\n   *\n   * @return {Object} valid parameters to be used to construct the state machine input.\n   */\n  async userParameters() {\n    return await validate(this.parameters);\n  }\n\n  /**\n   * Construct the input object that will be used to execute the state machine.\n   *\n   * This function will first validate the parameters defined inside the action,\n   * resolve all remote artifact files (providing Signed URLs in their place)\n   * as well as resolve all values which have been defined as parameter overrides.\n   *\n   * @return {Object} a validated, resolved input object, used to execute the\n   *   state machine.\n   */\n  async input() {\n    const { Files, Flood, Grids: grids, Parameters: params } = await this.userParameters();\n    const files = await new Uploader(Files, this.artifacts).urls();\n    const overrides = await new Parameters(params, this.artifacts).toOverrides();\n    const flood = Object.assign(Flood, { override_parameters: overrides });\n    return { files, flood, grids };\n  }\n\n  /**\n   * This function handles starting the execution of the state machine after\n   * resolving the input it requires.\n   *\n   * Resolving the input involves transforming artifact-references files, as well\n   * as parameter overrides that have been defined, in addition to validating\n   * the parameters which have been designed for the flood & grid test.\n   *\n   * @return {String} the Execution AWS Arn of the state machine.\n   */\n  async perform() {\n    const input = await this.input();\n    return await Start.start(JSON.stringify(input));\n  }\n\n  /**\n   * Start a state machine execution using valid input and return the ARN of the\n   * execution.\n   *\n   * @return {String} the AWS ARN of the Step Functions state machine execution.\n   */\n  static async start(input) {\n    try {\n      const stepfunctions = new StepFunctions({ region: AWS_REGION });\n      const params = { stateMachineArn: STATE_MACHINE, input };\n      const { executionArn } = await stepfunctions.startExecution(params).promise();\n      return executionArn;\n    } catch (err) {\n      throw executionError(err, { arn: STATE_MACHINE });\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/pipeline/pipeline/start.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "inputArtifactsError",
    "memberof": "functions/pipeline/pipeline/start.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/start.js~inputArtifactsError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/start.js",
    "importStyle": null,
    "description": "A validation error was encountered",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "executionError",
    "memberof": "functions/pipeline/pipeline/start.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/start.js~executionError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/start.js",
    "importStyle": null,
    "description": "A validation error was encountered",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 115,
    "kind": "class",
    "name": "Start",
    "memberof": "functions/pipeline/pipeline/start.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/start.js~Start",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/start.js",
    "importStyle": "Start",
    "description": "Handles initiating the execution of a Step Functions state machine, which handles\nstarting a Flood.IO load test.\n\nThis class uses the object received from CodePipeline to resolve UserParameter\nremote references and forms the input payload.",
    "lineNumber": 41,
    "interface": false
  },
  {
    "__docId__": 116,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "functions/pipeline/pipeline/start.js~Start",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/start.js~Start#constructor",
    "access": "public",
    "description": "Starts a new execution of a Step Functions state machine by validating any\nconfiguration and resolving remote artifact references for flood files as well\nas any artifact parameters.",
    "examples": [
      "```\n {\n    \"CodePipeline.job\": {\n        \"id\": \"11111111-abcd-1111-abcd-111111abcdef\",\n        \"accountId\": \"111111111111\",\n        \"data\": {\n            \"actionConfiguration\": {\n                \"configuration\": {\n                    \"FunctionName\": \"MyLambdaFunctionForAWSCodePipeline\",\n                    \"UserParameters\": \"some-input-such-as-a-URL\"\n                }\n            },\n            \"inputArtifacts\": [\n                {\n                    \"location\": {\n                        \"s3Location\": {\n<<<<<<< HEAD\n                            \"bucketName\": \"codepipeline-us-east-2-1234567890\",\n                            \"objectKey\": \"frj9q0j09aj09j.zip\"\n=======\n                            \"bucketName\": \"the name of the bucket configured as the pipeline\" +\n                                 \"artifact store in Amazon S3,\" +\n                                 \"for example codepipeline-us-east-2-1234567890\",\n                            \"objectKey\": \"the name of the application,\" +\n                                 \"for example CodePipelineDemoApplication.zip\"\n>>>>>>> ad649bc7c07cd9a69a6d2b944ff42280c3a740c8\n                        },\n                        \"type\": \"S3\"\n                    },\n                    \"revision\": null,\n                    \"name\": \"ArtifactName\"\n                }\n            ],\n            \"outputArtifacts\": [],\n            \"artifactCredentials\": {\n                \"secretAccessKey\": \"....\",\n                \"sessionToken\": \"....\",\n                \"accessKeyId\": \"....\"\n            },\n            \"continuationToken\": \"A continuation token if continuing job\"\n        }\n    }\n }\n```"
    ],
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "A CodePipeline data event object."
      }
    ]
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "data",
    "memberof": "functions/pipeline/pipeline/start.js~Start",
    "static": false,
    "longname": "functions/pipeline/pipeline/start.js~Start#data",
    "access": "public",
    "description": "The data object as received from AWS CodePipeline.",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "parameters",
    "memberof": "functions/pipeline/pipeline/start.js~Start",
    "static": false,
    "longname": "functions/pipeline/pipeline/start.js~Start#parameters",
    "access": "public",
    "description": "The parsed contents of the `UserParameters` string as defined inside the\naction in the CodePipeline resource.",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "artifacts",
    "memberof": "functions/pipeline/pipeline/start.js~Start",
    "static": false,
    "longname": "functions/pipeline/pipeline/start.js~Start#artifacts",
    "access": "public",
    "description": "An array of {@link Artifact} objects which have been made available to\nthe CodePipeline action definition.\n\nThese artifacts may be referenced by Parameters (Fn::GetParam keys)\nas well as Files to be uploaded to Flood.IO.",
    "lineNumber": 123,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "userParameters",
    "memberof": "functions/pipeline/pipeline/start.js~Start",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/start.js~Start#userParameters",
    "access": "public",
    "description": "Retrieve validated (and defaulted) parameters which have been defined inside\nthe action in the CodePipeline resource.",
    "lineNumber": 136,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "valid parameters to be used to construct the state machine input."
    },
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "input",
    "memberof": "functions/pipeline/pipeline/start.js~Start",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/start.js~Start#input",
    "access": "public",
    "description": "Construct the input object that will be used to execute the state machine.\n\nThis function will first validate the parameters defined inside the action,\nresolve all remote artifact files (providing Signed URLs in their place)\nas well as resolve all values which have been defined as parameter overrides.",
    "lineNumber": 150,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "a validated, resolved input object, used to execute the\n  state machine."
    },
    "params": []
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "perform",
    "memberof": "functions/pipeline/pipeline/start.js~Start",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/start.js~Start#perform",
    "access": "public",
    "description": "This function handles starting the execution of the state machine after\nresolving the input it requires.\n\nResolving the input involves transforming artifact-references files, as well\nas parameter overrides that have been defined, in addition to validating\nthe parameters which have been designed for the flood & grid test.",
    "lineNumber": 168,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "the Execution AWS Arn of the state machine."
    },
    "params": []
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "start",
    "memberof": "functions/pipeline/pipeline/start.js~Start",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "functions/pipeline/pipeline/start.js~Start.start",
    "access": "public",
    "description": "Start a state machine execution using valid input and return the ARN of the\nexecution.",
    "lineNumber": 179,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "the AWS ARN of the Step Functions state machine execution."
    },
    "params": [
      {
        "name": "input",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "functions/pipeline/pipeline/uploader/file.js",
    "content": "import Path from 'path';\nimport { S3 } from 'aws-sdk';\nimport uuid from 'uuid/v4';\nimport wrappedError from 'error/wrapped';\n\nimport { AWS_REGION } from '../../../globals';\nimport { FILE_BUCKET } from '../constants';\n\n/**\n * The S3 client failed to generate a pre-signed URL for the remote S3 object.\n *\n * @type {Error}\n */\nconst failedtoSignUrlError = wrappedError({\n  message: 'Failed to sign url for S3 remote: \"{Bucket}/{Key}\"',\n  type: 'pipeline.artifact.file.signed_url',\n});\n\n/**\n * The file defined inside the artifact could not be read.\n *\n * @type {Error}\n */\nconst fileReadError = wrappedError({\n  message: 'Failed to read remote artifact file.',\n  type: 'pipeline.artifact.file.read',\n});\n\n/**\n * An error occurred whilst attempting to upload an artifact file to S3.\n *\n * @type {Error}\n */\nconst fileUploadError = wrappedError({\n  message: 'Failed to upload artifact file.',\n  type: 'pipeline.artifact.file.upload',\n});\n\n/**\n * Represents a Flood testing file which is to be first retrieved from a remote\n * CodePipeline artifact and then uploaded to a separate S3 bucket ready for\n * upload to Flood.IO (inside step functions).\n */\nexport default class File {\n  /**\n   * @param {Artifact} artifact - the artifact the file resides in.\n   * @param {String} filename - The name of the file inside the artifact.\n   */\n  constructor(artifact, filename) {\n    /**\n     * An initialised AWS S3 client object.\n     *\n     * @type {S3}\n     */\n    this.client = new S3({ region: AWS_REGION });\n    /**\n     * The file extension, extracted from the filename, prefixed with \".\"\n     *\n     * @type {String}\n     */\n    this.extname = Path.extname(filename);\n    /**\n     * The artifact object which the file resides in.\n     *\n     * @type {Artifact}\n     */\n    this.artifact = artifact;\n    /**\n     * The name of the file inside the artifact\n     *\n     * @type {String}\n     */\n    this.filename = filename;\n    /**\n     * A UUID V4 key which will represent the file inside the remote S3 bucket,\n     * once uploaded.\n     *\n     * @type {String}\n     */\n    this.key = uuid();\n    /**\n     * A remote object containing the Bucket that the file will be uploaded to,\n     * in addition to the Key which the file will be stored under.\n     *\n     * Note that in-order to avoid remote conflicts, the filename is randomized\n     * with a UUID ({@link File#key}) and suffixed with the appropriate file\n     * extension.\n     *\n     * @type {Object}\n     */\n    this.remote = {\n      Bucket: FILE_BUCKET,\n      Key: `${this.key}${this.extname}`,\n    };\n  }\n\n  /**\n   * Retrieve a signed url, using AWS environment credentials for the remote\n   * file.\n   *\n   * @return {String} a AWS SigV4 signed URL for retrieving the flood file without\n   *   an appropriate IAM role in a remote resource.\n   */\n  async signedUrl() {\n    try {\n      return await this.client.getSignedUrl(this.remote).promise();\n    } catch (err) {\n      throw failedtoSignUrlError(err, this.remote);\n    }\n  }\n\n  /**\n   * @private\n   *\n   * Read the data of the remote file inside the artifact.\n   *\n   * @return {Buffer} the contents of the remote artifact file.\n   */\n  async read() {\n    try {\n      const { filename } = this;\n      await this.artifact.ready();\n      return this.artifact.get(filename);\n    } catch (err) {\n      throw fileReadError(err);\n    }\n  }\n\n  /**\n   * Upload the file from inside the remote artifact to a secure S3 bucket.\n   *\n   * This function will first download the remote CodePipeline artifact, unzip\n   * the contents, read the contents of the intended file and then upload\n   * the contents to another S3 bucket.\n   *\n   * @return {Object} the raw AWS S3 response of `putObject`.\n   */\n  async upload() {\n    try {\n      const Body = await this.read();\n      const { remote } = this;\n      const params = Object.assign({}, remote, { Body });\n      return await this.client.putObject(params).promise();\n    } catch (err) {\n      throw fileUploadError(err);\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/pipeline/pipeline/uploader/file.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "variable",
    "name": "failedtoSignUrlError",
    "memberof": "functions/pipeline/pipeline/uploader/file.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/uploader/file.js~failedtoSignUrlError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/uploader/file.js",
    "importStyle": null,
    "description": "The S3 client failed to generate a pre-signed URL for the remote S3 object.",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "fileReadError",
    "memberof": "functions/pipeline/pipeline/uploader/file.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/uploader/file.js~fileReadError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/uploader/file.js",
    "importStyle": null,
    "description": "The file defined inside the artifact could not be read.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "variable",
    "name": "fileUploadError",
    "memberof": "functions/pipeline/pipeline/uploader/file.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/uploader/file.js~fileUploadError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/uploader/file.js",
    "importStyle": null,
    "description": "An error occurred whilst attempting to upload an artifact file to S3.",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 128,
    "kind": "class",
    "name": "File",
    "memberof": "functions/pipeline/pipeline/uploader/file.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/uploader/file.js",
    "importStyle": "File",
    "description": "Represents a Flood testing file which is to be first retrieved from a remote\nCodePipeline artifact and then uploaded to a separate S3 bucket ready for\nupload to Flood.IO (inside step functions).",
    "lineNumber": 44,
    "interface": false
  },
  {
    "__docId__": 129,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "functions/pipeline/pipeline/uploader/file.js~File",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Artifact"
        ],
        "spread": false,
        "optional": false,
        "name": "artifact",
        "description": "the artifact the file resides in."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "The name of the file inside the artifact."
      }
    ]
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "client",
    "memberof": "functions/pipeline/pipeline/uploader/file.js~File",
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File#client",
    "access": "public",
    "description": "An initialised AWS S3 client object.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "S3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "extname",
    "memberof": "functions/pipeline/pipeline/uploader/file.js~File",
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File#extname",
    "access": "public",
    "description": "The file extension, extracted from the filename, prefixed with \".\"",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "artifact",
    "memberof": "functions/pipeline/pipeline/uploader/file.js~File",
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File#artifact",
    "access": "public",
    "description": "The artifact object which the file resides in.",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "Artifact"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "filename",
    "memberof": "functions/pipeline/pipeline/uploader/file.js~File",
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File#filename",
    "access": "public",
    "description": "The name of the file inside the artifact",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "key",
    "memberof": "functions/pipeline/pipeline/uploader/file.js~File",
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File#key",
    "access": "public",
    "description": "A UUID V4 key which will represent the file inside the remote S3 bucket,\nonce uploaded.",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "remote",
    "memberof": "functions/pipeline/pipeline/uploader/file.js~File",
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File#remote",
    "access": "public",
    "description": "A remote object containing the Bucket that the file will be uploaded to,\nin addition to the Key which the file will be stored under.\n\nNote that in-order to avoid remote conflicts, the filename is randomized\nwith a UUID ({@link File#key}) and suffixed with the appropriate file\nextension.",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "signedUrl",
    "memberof": "functions/pipeline/pipeline/uploader/file.js~File",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File#signedUrl",
    "access": "public",
    "description": "Retrieve a signed url, using AWS environment credentials for the remote\nfile.",
    "lineNumber": 104,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "a AWS SigV4 signed URL for retrieving the flood file without\n  an appropriate IAM role in a remote resource."
    },
    "params": []
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "read",
    "memberof": "functions/pipeline/pipeline/uploader/file.js~File",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File#read",
    "access": "private",
    "description": "",
    "lineNumber": 119,
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": "the contents of the remote artifact file."
    },
    "params": []
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "upload",
    "memberof": "functions/pipeline/pipeline/uploader/file.js~File",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/file.js~File#upload",
    "access": "public",
    "description": "Upload the file from inside the remote artifact to a secure S3 bucket.\n\nThis function will first download the remote CodePipeline artifact, unzip\nthe contents, read the contents of the intended file and then upload\nthe contents to another S3 bucket.",
    "lineNumber": 138,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the raw AWS S3 response of `putObject`."
    },
    "params": []
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "functions/pipeline/pipeline/uploader/uploader.js",
    "content": "import typedError from 'error/typed';\n\nimport File from './file';\n\n/**\n * The defined remote artifact does not exist or access has not been granted.\n *\n * @type {Error}\n */\nconst artifactNotFound = typedError({\n  message: 'Artifact \"{artifactName}\" was referenced, but is not a valid InputArtifact.',\n  type: 'pipeline.artifact.not_found',\n});\n\n/**\n * This class handles resolving references to flood files defined inside\n * the user parameters for the action.\n *\n * The State Machine does not contain the logic necessary to extract CodePipeline\n * artifacts and fetch their contents. Therefore, it is the responsibility of this\n * class to retrieve artifacts, decompress them and upload any referenced files\n * to a secure remote, providing a signed URL that the state machine function can use\n * to securely retrieve the Flood files.\n */\nexport default class Uploader {\n  /**\n   * @param {Array[String]} references - an array of remote file references defined.\n   * @param {Array[Artifact]} artifacts - an array of artifacts available to this function.\n   */\n  constructor(references, artifacts) {\n    /**\n     * An array of strings defining references to files located\n     * inside CodePipeline artifacts.\n     *\n     * @type {Array[String]}\n     */\n    this.references = references;\n    /**\n     * An array of artifacts to retrieve references from.\n     *\n     * @type {Array[Artifact]}\n     */\n    this.artifacts = artifacts;\n  }\n\n  /**\n   * An array of initialized {@link File} objects for each reference.\n   *\n   * Each element contains a defined reference along with the relevant artifact\n   * that the file can be found within.\n   *\n   * @return {Array[File]} an array of File instances.\n   */\n  files() {\n    return this.references.map((file) => {\n      const [artifactName, filename] = file.split('::');\n      const artifact = this.artifacts[artifactName];\n      if (!artifact) {\n        throw artifactNotFound({ artifactName });\n      }\n      return new File(artifact, filename);\n    });\n  }\n\n  /**\n   * Retrieves an array of signed URLs, of resolved references which have been\n   * retrieved from the remote CodePipeline artifact, uploaded to a remote bucket\n   * and then a signed URL has been generated.\n   *\n   * @return {Array[String]} an array of signed S3 URLs.\n   */\n  async urls() {\n    const files = this.files();\n    await Promise.all(files.map(f => f.upload()));\n    return await Promise.all(files.map(f => f.signedUrl()));\n  }\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/pipeline/pipeline/uploader/uploader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "artifactNotFound",
    "memberof": "functions/pipeline/pipeline/uploader/uploader.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/uploader/uploader.js~artifactNotFound",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/uploader/uploader.js",
    "importStyle": null,
    "description": "The defined remote artifact does not exist or access has not been granted.",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "class",
    "name": "Uploader",
    "memberof": "functions/pipeline/pipeline/uploader/uploader.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/uploader/uploader.js~Uploader",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/uploader/uploader.js",
    "importStyle": "Uploader",
    "description": "This class handles resolving references to flood files defined inside\nthe user parameters for the action.\n\nThe State Machine does not contain the logic necessary to extract CodePipeline\nartifacts and fetch their contents. Therefore, it is the responsibility of this\nclass to retrieve artifacts, decompress them and upload any referenced files\nto a secure remote, providing a signed URL that the state machine function can use\nto securely retrieve the Flood files.",
    "lineNumber": 25,
    "interface": false
  },
  {
    "__docId__": 142,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "functions/pipeline/pipeline/uploader/uploader.js~Uploader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/uploader.js~Uploader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array[String]"
        ],
        "spread": false,
        "optional": false,
        "name": "references",
        "description": "an array of remote file references defined."
      },
      {
        "nullable": null,
        "types": [
          "Array[Artifact]"
        ],
        "spread": false,
        "optional": false,
        "name": "artifacts",
        "description": "an array of artifacts available to this function."
      }
    ]
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "references",
    "memberof": "functions/pipeline/pipeline/uploader/uploader.js~Uploader",
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/uploader.js~Uploader#references",
    "access": "public",
    "description": "An array of strings defining references to files located\ninside CodePipeline artifacts.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Array[String]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "artifacts",
    "memberof": "functions/pipeline/pipeline/uploader/uploader.js~Uploader",
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/uploader.js~Uploader#artifacts",
    "access": "public",
    "description": "An array of artifacts to retrieve references from.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "Array[Artifact]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "files",
    "memberof": "functions/pipeline/pipeline/uploader/uploader.js~Uploader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/uploader.js~Uploader#files",
    "access": "public",
    "description": "An array of initialized {@link File} objects for each reference.\n\nEach element contains a defined reference along with the relevant artifact\nthat the file can be found within.",
    "lineNumber": 54,
    "return": {
      "nullable": null,
      "types": [
        "Array[File]"
      ],
      "spread": false,
      "description": "an array of File instances."
    },
    "params": []
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "urls",
    "memberof": "functions/pipeline/pipeline/uploader/uploader.js~Uploader",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "functions/pipeline/pipeline/uploader/uploader.js~Uploader#urls",
    "access": "public",
    "description": "Retrieves an array of signed URLs, of resolved references which have been\nretrieved from the remote CodePipeline artifact, uploaded to a remote bucket\nand then a signed URL has been generated.",
    "lineNumber": 72,
    "return": {
      "nullable": null,
      "types": [
        "Array[String]"
      ],
      "spread": false,
      "description": "an array of signed S3 URLs."
    },
    "params": []
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "functions/pipeline/pipeline/validate/schema.js",
    "content": "/**\n * This schema defines the keys, properties and valid values that can be included\n * inside the `UserParameters` key when defining the use of this action inside\n * CodePipeline.\n *\n * @see https://github.com/flood-io/api-docs\n *\n * @type {Object}\n */\nconst Schema = {\n  type: 'object',\n  required: [\n    'Flood',\n    'Files',\n    'Grids',\n  ],\n  properties: {\n    Parameters: {\n      type: 'object',\n      default: {},\n      additionalProperties: {\n        oneOf: [\n          {\n            type: 'string',\n          },\n          {\n            type: 'object',\n            required: [\n              'Fn::GetParam',\n            ],\n            properties: {\n              'Fn::GetParam': {\n                type: 'array',\n                items: [\n                  {\n                    type: 'string',\n                  },\n                  {\n                    type: 'string',\n                  },\n                  {\n                    type: 'string',\n                  },\n                ],\n              },\n            },\n          },\n        ],\n      },\n    },\n    Flood: {\n      type: 'object',\n      required: [\n        'tool',\n      ],\n      properties: {\n        tool: {\n          type: 'string',\n          enum: [\n            'jmeter',\n            'gatling',\n            'java-selenium-chrome',\n            'java-selenium-firefox',\n          ],\n        },\n        name: {\n          type: 'string',\n          regex: '^[_-A-Za-z0-9]+$',\n        },\n        notes: {\n          type: 'string',\n        },\n        privacy_flag: {\n          type: 'string',\n          default: 'private',\n          enum: [\n            'public',\n            'private',\n          ],\n        },\n        threads: {\n          type: 'integer',\n          minimum: 1,\n          default: 2,\n        },\n        rampup: {\n          type: 'integer',\n          minimum: 1,\n        },\n        duration: {\n          type: 'integer',\n          minimum: 1,\n        },\n        override_hosts: {\n          type: 'string',\n        },\n      },\n    },\n    Files: {\n      type: 'array',\n      minItems: 1,\n      uniqueItems: true,\n      items: {\n        type: 'string',\n        pattern: '^.+::.+$',\n      },\n    },\n    Grids: {\n      type: 'array',\n      minItems: 1,\n      items: {\n        oneOf: [\n          {\n            type: 'object',\n            required: [\n              'uuid',\n            ],\n            properties: {\n              uuid: {\n                type: 'string',\n              },\n            },\n          },\n          {\n            type: 'object',\n            required: [\n              'region',\n              'instance_quantity',\n              'stop_after',\n            ],\n            properties: {\n              region: {\n                type: 'string',\n              },\n              instance_quantity: {\n                type: 'integer',\n              },\n              stop_after: {\n                type: 'integer',\n              },\n              infrastructure: {\n                type: 'string',\n              },\n              aws_platform: {\n                type: 'string',\n              },\n              aws_tags: {\n                type: 'string',\n              },\n              aws_availability_zone: {\n                type: 'string',\n              },\n              aws_spot_price: {\n                type: 'number',\n              },\n              credential_id: {\n                type: 'string',\n              },\n              aws_vpc_identifier: {\n                type: 'string',\n              },\n              aws_vpc_subnet_public: {\n                type: 'string',\n              },\n              aws_vpc_subnet_private: {\n                type: 'string',\n              },\n              aws_vpc_security_groups: {\n                type: 'string',\n              },\n            },\n          },\n        ],\n      },\n    },\n  },\n};\n\nexport default Schema;\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/pipeline/pipeline/validate/schema.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "Schema",
    "memberof": "functions/pipeline/pipeline/validate/schema.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/validate/schema.js~Schema",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/validate/schema.js",
    "importStyle": "Schema",
    "description": "This schema defines the keys, properties and valid values that can be included\ninside the `UserParameters` key when defining the use of this action inside\nCodePipeline.",
    "see": [
      "https://github.com/flood-io/api-docs"
    ],
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "functions/pipeline/pipeline/validate/validate.js",
    "content": "import Ajv from 'ajv';\nimport typedError from 'error/typed';\n\nimport Schema from './schema';\n\n/**\n * A validation error was encountered\n *\n * @type {Error}\n */\nconst validationError = typedError({\n  message: 'Invalid data: {messages}',\n  type: 'pipeline.validation',\n});\n\n/**\n * Build a new AJV validator isntance, ensuring that all errors are returned\n * if the data does not match the defined schema and any defined defaults are also\n * assigned to the returned data.\n */\nconst ajv = new Ajv({ useDefaults: true, allErrors: true });\n\n/**\n * Compiles the raw schema object, providing a method which can be used\n * to validate against a basic javascript object.\n */\nconst validate = ajv.compile(Schema);\n\n/**\n * Wraps the AJV library to provide a helper function which validates the\n * passed data object against the imported schema file.\n *\n * If the schema fails to validate, an array of error messages are generated.\n *\n * @return {Object} a mutated data object, containing any defaulted properties\n *  where defined in the schema.\n */\nexport default function (data) {\n  return new Promise((resolve, reject) => {\n    const valid = validate(data);\n    if (!valid) {\n      const messages = validate.errors.map(e => `Schema ${e.message}`).join('. ');\n      reject(validationError({ messages }));\n    } else {\n      resolve(data);\n    }\n  });\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/pipeline/pipeline/validate/validate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "validationError",
    "memberof": "functions/pipeline/pipeline/validate/validate.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/validate/validate.js~validationError",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/validate/validate.js",
    "importStyle": null,
    "description": "A validation error was encountered",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "ajv",
    "memberof": "functions/pipeline/pipeline/validate/validate.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/validate/validate.js~ajv",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/validate/validate.js",
    "importStyle": null,
    "description": "Build a new AJV validator isntance, ensuring that all errors are returned\nif the data does not match the defined schema and any defined defaults are also\nassigned to the returned data.",
    "lineNumber": 21,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "validate",
    "memberof": "functions/pipeline/pipeline/validate/validate.js",
    "static": true,
    "longname": "functions/pipeline/pipeline/validate/validate.js~validate",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/validate/validate.js",
    "importStyle": null,
    "description": "Compiles the raw schema object, providing a method which can be used\nto validate against a basic javascript object.",
    "lineNumber": 27,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "validate",
    "memberof": "functions/pipeline/pipeline/validate/validate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/pipeline/pipeline/validate/validate.js~validate",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline/validate/validate.js",
    "importStyle": "validate",
    "description": "Wraps the AJV library to provide a helper function which validates the\npassed data object against the imported schema file.\n\nIf the schema fails to validate, an array of error messages are generated.",
    "lineNumber": 38,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "a mutated data object, containing any defaulted properties\n where defined in the schema."
    },
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "functions/pipeline/pipeline.js",
    "content": "import { CodePipeline } from 'aws-sdk';\n// import Logger from '../logger';\n\nimport { AWS_REGION } from '../globals';\n\nimport Start from './pipeline/start';\nimport Resume from './pipeline/resume';\n\nconst client = new CodePipeline({ region: AWS_REGION });\n\nexport async function handler(event, context, cb) {\n  const pipeline = event['CodePipeline.job'];\n  const { id, data: { continuationToken } } = pipeline;\n  try {\n    const result = { jobId: id };\n    if (continuationToken) {\n      const resume = new Resume(continuationToken);\n      const [resuming, summary = 'Summary unavailable.'] = await resume.perform();\n      if (resuming) {\n        result.continuationToken = continuationToken;\n      } else {\n        result.executionDetails = { summary };\n      }\n    } else {\n      const start = new Start(pipeline);\n      result.continuationToken = await start.perform();\n    }\n    await client.putJobSuccessResult(result).promise();\n    cb(null, result);\n  } catch (err) {\n    await client.putJobFailureResult({\n      jobId: id,\n      failureDetails: {\n        message: err.message,\n        type: 'JobFailed',\n      },\n    });\n    cb(err);\n  }\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/pipeline/pipeline.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "client",
    "memberof": "functions/pipeline/pipeline.js",
    "static": true,
    "longname": "functions/pipeline/pipeline.js~client",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/pipeline/pipeline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "handler",
    "memberof": "functions/pipeline/pipeline.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "functions/pipeline/pipeline.js~handler",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/pipeline/pipeline.js",
    "importStyle": "{handler}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 157,
    "kind": "file",
    "name": "functions/steps/create/create.js",
    "content": "import fs from 'fs';\nimport request from 'request-promise-native';\n\nimport { FLOOD_API_KEY, FLOOD_API_URI, FLOODS_PATH } from '../../globals';\nimport { parseFloodResponse, transformObjectProps } from '../helper';\n\nconst tempStorage = '/tmp';\n\n/**\n * Creates a download and write to filesystem job for each url in the files argument.\n *\n * @param {Array} files - list of files to be downloaded\n * @return {Promise|Array} - promise that will resolve to an array of local file references\n */\nconst getFloodFiles = (files) => {\n  if (!files || files.length < 1) {\n    return Promise.reject(new Error('No flood files provided'));\n  }\n\n  const downloadJobs = files.map(fileToRequest =>\n    new Promise((resolve, reject) => {\n      const fileName = fileToRequest.split('/').pop();\n      const fullPath = `${tempStorage}/${fileName}`;\n\n      request.get(fileToRequest)\n        .then(res => {\n          fs.writeFile(fullPath, res, (err) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(fullPath);\n            }\n          });\n        });\n    })\n  );\n\n  return Promise.all(downloadJobs);\n};\n\n/**\n * Function that builds the form payload and posts to flood.io\n *\n * @param {Array} files - list of local files to read\n * @param {Object} event - the object containing flood io options\n * @return {Promise} - returns a promise that will resolve/reject if the request is successful\n */\nconst postToFlood = (files, event) => {\n  const floodOptions = { flood: event.flood };\n  const mappedProps = transformObjectProps(floodOptions);\n\n  const fileStreams = files.map(file => fs.createReadStream(file));\n  mappedProps['flood_files[]'] = fileStreams;\n\n  const options = {\n    uri: `${FLOOD_API_URI}${FLOODS_PATH}`,\n    formData: mappedProps,\n    auth: {\n      user: FLOOD_API_KEY,\n    },\n  };\n\n  return request.post(options)\n    .then(res => JSON.parse(res));\n};\n\n/**\n * This handler will parse an event object, download files specified\n * and then upload them (POST) to flood.io.\n *\n * Flood.io specific options will also be parsed from the event and passed along.\n * Required parameters are:\n *  - tool, string, e.g. 'jmeter'\n *  - grids, object\n *    - region, string, e.g. 'eu-west-1\n *    - instance_type, string, e.g. 'm4.xlarge'\n *    - stop_after, string, e.g. '60'\n *    - infrastructure, string, e.g. 'demand\n *  - files, array\n *\n * See: https://github.com/flood-io/api-docs/blob/master/endpoints/floods/POST-floods.md\n *\n * Callback function will be called with an object describing the flood session on success\n * ```\n * {\n *  flood: {\n *    uuid, string\n *  },\n *  grid: {\n *    uuid, string\n *  },\n *  status, string, e.g. 'queued'/'finished'\n * }\n * ```\n *\n * @param {Object} event - object containing list of test files to be executed and flood io options\n * @param {Object} context - Lambda runtime information\n * @param {Function} callback - callback function that will receive either (err) or (null, response)\n *\n */\nexport function handler(\n  event = {},\n  context,\n  callback = () => {}\n) {\n  getFloodFiles(event.files)\n    .then(downloadedFiles => postToFlood(downloadedFiles, event))\n    .then(res => {\n      const cr = parseFloodResponse(res);\n      callback(null, cr);\n    })\n    .catch((err) => {\n      callback(err);\n    });\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/steps/create/create.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "tempStorage",
    "memberof": "functions/steps/create/create.js",
    "static": true,
    "longname": "functions/steps/create/create.js~tempStorage",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/steps/create/create.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "getFloodFiles",
    "memberof": "functions/steps/create/create.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/steps/create/create.js~getFloodFiles",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/steps/create/create.js",
    "importStyle": null,
    "description": "Creates a download and write to filesystem job for each url in the files argument.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "files",
        "description": "list of files to be downloaded"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise",
        "Array"
      ],
      "spread": false,
      "description": "promise that will resolve to an array of local file references"
    },
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "postToFlood",
    "memberof": "functions/steps/create/create.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/steps/create/create.js~postToFlood",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/steps/create/create.js",
    "importStyle": null,
    "description": "Function that builds the form payload and posts to flood.io",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "files",
        "description": "list of local files to read"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "the object containing flood io options"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "returns a promise that will resolve/reject if the request is successful"
    },
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "handler",
    "memberof": "functions/steps/create/create.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/steps/create/create.js~handler",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/steps/create/create.js",
    "importStyle": "{handler}",
    "description": "This handler will parse an event object, download files specified\nand then upload them (POST) to flood.io.\n\nFlood.io specific options will also be parsed from the event and passed along.\nRequired parameters are:\n - tool, string, e.g. 'jmeter'\n - grids, object\n   - region, string, e.g. 'eu-west-1\n   - instance_type, string, e.g. 'm4.xlarge'\n   - stop_after, string, e.g. '60'\n   - infrastructure, string, e.g. 'demand\n - files, array\n\nSee: https://github.com/flood-io/api-docs/blob/master/endpoints/floods/POST-floods.md\n\nCallback function will be called with an object describing the flood session on success\n```\n{\n flood: {\n   uuid, string\n },\n grid: {\n   uuid, string\n },\n status, string, e.g. 'queued'/'finished'\n}\n```",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "object containing list of test files to be executed and flood io options"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Lambda runtime information"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "callback function that will receive either (err) or (null, response)"
      }
    ],
    "return": null
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "functions/steps/helper.js",
    "content": "/**\n * Attempts to parse a flood.io response, extracting the flood uuid, the grid uuid and the status.\n *\n * @param {Object} data - response from flood io\n * @return {Object} - an object with the flood, grid and status properties\n * ```\n * {\n *  flood: {\n *    uuid\n *  },\n *  grid: {\n *    uuid\n *  },\n *  status\n * }\n * ```\n */\nexport const parseFloodResponse = (data) => {\n  const { uuid, _embedded, status } = data;\n  const grid = _embedded.grids.shift();\n  return {\n    flood: {\n      uuid,\n    },\n    grid: {\n      uuid: grid.uuid,\n    },\n    status,\n  };\n};\n\n\nconst makeArrayKey = key => {\n  if (key.length > 2 && key.lastIndexOf('[]') === key.length - 2) {\n    return key;\n  }\n  return `${key}[]`;\n};\n\n/**\n * Attempts to remap an object structure to a form compatible object.\n * Takes an object like\n * ```\n * {\n *  flood: {\n *    tool: 'jmeter'\n *    grids: [\n *      {\n *        region: 'eu-west-1'\n *      }\n *    ]\n *  }\n * }\n * ```\n * and transforms it to\n * ```\n * {\n *  'flood[tool]': 'jmeter',\n *  'flood[grids][][region]': 'eu-west-1'\n * }\n * ```\n *\n * @param {Object} obj - object containing the flood io preferences\n * @param {Object} parent - parent object to insert into (used for recursion)\n * @param {String} pre - prefix, will be generated from keys if not provided\n */\nexport const transformObjectProps = (obj, parent, pre) => {\n  const mappedObj = parent || {};\n\n  Object.keys(obj).forEach(prop => {\n    const key = pre ? (`${pre}[${prop}]`) : prop;\n\n    if (typeof obj[prop] === 'object' && !Array.isArray(obj[prop])) {\n      transformObjectProps(obj[prop], mappedObj, key);\n    } else if (Array.isArray(obj[prop])) {\n      obj[prop].forEach(value => {\n        const arrayKey = makeArrayKey(key);\n\n        if (typeof value === 'object') {\n          transformObjectProps(value, mappedObj, arrayKey);\n        } else {\n          mappedObj[arrayKey] = value;\n        }\n      });\n    } else {\n      mappedObj[key] = obj[prop];\n    }\n  });\n\n  return mappedObj;\n};\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/steps/helper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "parseFloodResponse",
    "memberof": "functions/steps/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/steps/helper.js~parseFloodResponse",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/steps/helper.js",
    "importStyle": "{parseFloodResponse}",
    "description": "Attempts to parse a flood.io response, extracting the flood uuid, the grid uuid and the status.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "response from flood io"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "an object with the flood, grid and status properties\n```\n{\n flood: {\n   uuid\n },\n grid: {\n   uuid\n },\n status\n}\n```"
    }
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "makeArrayKey",
    "memberof": "functions/steps/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/steps/helper.js~makeArrayKey",
    "access": "public",
    "export": false,
    "importPath": "pipeline-flood/functions/steps/helper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "transformObjectProps",
    "memberof": "functions/steps/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/steps/helper.js~transformObjectProps",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/steps/helper.js",
    "importStyle": "{transformObjectProps}",
    "description": "Attempts to remap an object structure to a form compatible object.\nTakes an object like\n```\n{\n flood: {\n   tool: 'jmeter'\n   grids: [\n     {\n       region: 'eu-west-1'\n     }\n   ]\n }\n}\n```\nand transforms it to\n```\n{\n 'flood[tool]': 'jmeter',\n 'flood[grids][][region]': 'eu-west-1'\n}\n```",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "object containing the flood io preferences"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "parent object to insert into (used for recursion)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "pre",
        "description": "prefix, will be generated from keys if not provided"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "functions/steps/remove/remove.js",
    "content": "import request from 'request-promise-native';\nimport { FLOOD_API_KEY, FLOOD_API_URI, GRIDS_PATH } from '../../globals';\n\n/**\n * Removes a flood grid\n *\n * See: https://github.com/flood-io/api-docs/blob/master/endpoints/grids/DELETE-grids-grid_id.md\n *\n * Callback function will be called with an object containing the new status of the grid\n *\n * @param {Object} event - object containing the grid uuid\n * @param {Object} context - Lambda runtime information\n * @param {Function} callback - function that will be invoked with (err) or (null, response)\n */\nexport function handler(\n  event = {},\n  context,\n  callback = () => {}\n) {\n  const { grid: { uuid } } = event;\n  const options = {\n    uri: `${FLOOD_API_URI}${GRIDS_PATH}/${uuid}`,\n    auth: {\n      user: FLOOD_API_KEY,\n    },\n  };\n\n  request.delete(options)\n    .then(res => {\n      callback(null, Object.assign({}, event, JSON.parse(res)));\n    })\n    .catch(err => {\n      callback(err);\n    });\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/steps/remove/remove.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "handler",
    "memberof": "functions/steps/remove/remove.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/steps/remove/remove.js~handler",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/steps/remove/remove.js",
    "importStyle": "{handler}",
    "description": "Removes a flood grid\n\nSee: https://github.com/flood-io/api-docs/blob/master/endpoints/grids/DELETE-grids-grid_id.md\n\nCallback function will be called with an object containing the new status of the grid",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "object containing the grid uuid"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Lambda runtime information"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "function that will be invoked with (err) or (null, response)"
      }
    ],
    "return": null
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "functions/steps/results/results.js",
    "content": "import request from 'request-promise-native';\nimport { FLOOD_API_KEY, FLOOD_API_URI, FLOODS_PATH } from '../../globals';\n\n/**\n * Retrieves the summary of the flood job.\n *\n * See: https://github.com/flood-io/api-docs/blob/master/endpoints/floods/GET-floods-flood_id-report.md\n *\n * Callback function will be called with an object containing the summary of the flood\n * ```\n * {\n *  summary, string\n * }\n * ```\n *\n * @param {Object} event - object containing the flood uuid\n * @param {Object} context - Lambda runtime information\n * @param {Function} callback - function that will be invoked with (err) or (null, response)\n */\nexport function handler(\n  event = {},\n  context,\n  callback = () => {}\n) {\n  const { flood: { uuid } } = event;\n  const options = {\n    uri: `${FLOOD_API_URI}${FLOODS_PATH}/${uuid}/report`,\n    auth: {\n      user: FLOOD_API_KEY,\n    },\n  };\n\n  request.get(options)\n    .then(res => {\n      const { summary } = JSON.parse(res);\n      callback(null, summary);\n    })\n    .catch(err => {\n      callback(err);\n    });\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/steps/results/results.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "handler",
    "memberof": "functions/steps/results/results.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/steps/results/results.js~handler",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/steps/results/results.js",
    "importStyle": "{handler}",
    "description": "Retrieves the summary of the flood job.\n\nSee: https://github.com/flood-io/api-docs/blob/master/endpoints/floods/GET-floods-flood_id-report.md\n\nCallback function will be called with an object containing the summary of the flood\n```\n{\n summary, string\n}\n```",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "object containing the flood uuid"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Lambda runtime information"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "function that will be invoked with (err) or (null, response)"
      }
    ],
    "return": null
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "functions/steps/status/status.js",
    "content": "import request from 'request-promise-native';\n\nimport { FLOOD_API_KEY, FLOOD_API_URI, FLOODS_PATH } from '../../globals';\nimport { parseFloodResponse } from '../helper';\n\n/**\n * Queries the flood.io API for the status of a flood job.\n *\n * See: https://github.com/flood-io/api-docs/blob/master/endpoints/floods/GET-floods-flood_id.md\n *\n * Callback function will be called with an object describing the flood session on success\n * ```\n * {\n *  flood: {\n *    uuid, string\n *  },\n *  grid: {\n *    uuid, string\n *  },\n *  status, string, e.g. 'queued'/'finished'\n * }\n * ```\n *\n * @param {Object} event - object containing the flood uuid\n * @param {Object} context - Lambda runtime information\n * @param {Function} callback - function that will be invoked with (err) or (null, response)\n *\n */\nexport function handler(\n  event = {},\n  context,\n  callback = () => {}\n) {\n  const { flood: { uuid } } = event;\n  const options = {\n    uri: `${FLOOD_API_URI}${FLOODS_PATH}/${uuid}`,\n    auth: {\n      user: FLOOD_API_KEY,\n    },\n  };\n\n  request.get(options)\n    .then((res) => {\n      const cr = parseFloodResponse(JSON.parse(res));\n      callback(null, cr);\n    })\n    .catch((err) => {\n      callback(err);\n    });\n}\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/functions/steps/status/status.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "handler",
    "memberof": "functions/steps/status/status.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "functions/steps/status/status.js~handler",
    "access": "public",
    "export": true,
    "importPath": "pipeline-flood/functions/steps/status/status.js",
    "importStyle": "{handler}",
    "description": "Queries the flood.io API for the status of a flood job.\n\nSee: https://github.com/flood-io/api-docs/blob/master/endpoints/floods/GET-floods-flood_id.md\n\nCallback function will be called with an object describing the flood session on success\n```\n{\n flood: {\n   uuid, string\n },\n grid: {\n   uuid, string\n },\n status, string, e.g. 'queued'/'finished'\n}\n```",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "object containing the flood uuid"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Lambda runtime information"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "function that will be invoked with (err) or (null, response)"
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "![Logo][logo]\n\n# CodePipeline Flood.IO Action\n\n![Architecture][architecture]\n\nThis project provides an integration for [Flood.IO](https://flood.io) in [AWS CodePipeline](https://aws.amazon.com/documentation/codepipeline/).\n\nEnabling automated load testing as an action within a pipeline. You may pass \"flood files\" (Jmeter, Selenium, etc.) from a pipeline artifact, as well as optionally define parameter overrides using artifact attribute keys (as described below).\n\nIn-order to ensure your Pipeline has necessary permissions to invoke a Lambda function, follow the [setup steps here](http://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html).\n\nThe flood test is monitored by an AWS Step Functions State Machine (as described above).\n\nAn example action definition inside a CodePipeline CloudFormation resource definition:\n\n```yaml\n- Name: Testing\n  Actions:\n    - Name: Flood\n      RunOrder: 1\n      InputArtifacts:\n        - Name: SourceOutput\n        - Name: TestStackOutput\n      ActionTypeId:\n        Category: Invoke\n        Owner: AWS\n        Version: 1\n        Provider: Lambda\n      OutputArtifacts:\n        - Name: BuildOutput\n      Configuration:\n        FunctionName: !ImportValue FloodTestingFunctionName\n        UserParameters: !Sub |\n          {\n            \"Parameters\": {\n              \"SOME_VAL\": \"${PipelineParameter}\",\n              \"API_URL\": {\n                \"Fn::GetParam\": [\"TestStackOutput\", \"Outputs.json\", \"ApiUrl\"]\n              }\n            },\n            \"Flood\": {\n              \"tool\": \"jmeter\"\n            },\n            \"Files\": [\n              \"SourceOutput::tests/load-test-a.jmx\",\n              \"SourceOutput::tests/load-test-b.jmx\"\n            ],\n            \"Grids\": [{\n              \"region\": \"us-east-1\",\n              \"instance_quantity\": 4,\n              \"stop_after\": 120\n            }]\n          }\n```\n\nFor a full definition of what you can define inside the `UserParameters` key, see [the JSON Schema file](/functions/pipeline/pipeline/validate/schema.js).\n\n[logo]: /.github/images/logo-small.png\n[architecture]: /.github/images/Flood.png\n\n\nEvent structure needs to follow this structure to be correctly read by flood.io.\nThe files list needs to be a list of presigned/public urls that the script can download.\n\nNOTE, empty values are not allowed\nNOTE2, if the `grid uuid` prop is set, it has to match an existing grid or it will return 404\n```\n{\n  files: [\n    'https://s3-eu-west-1.amazonaws.com/floodfiles/floodtest.jmx',\n  ],\n  flood: {\n    tool: 'jmeter',\n    // name: '',\n    // notes: '',\n    // tag_list: '',\n    // privacy_flag: '',\n    // threads: '',\n    // rampup: '',\n    // duration: '',\n    // override_hosts: '',\n    // override_parameters: '',\n    grids: [\n      {\n        // uuid: 'existing-grid-id',\n        region: 'eu-west-1',\n        instance_type: 'm4.xlarge',\n        // instance_quantity: '',\n        stop_after: '60',\n        infrastructure: 'demand',\n        // aws_platform: '',\n        // aws_tags: '',\n        // aws_availability_zone: '',\n        // aws_spot_price: '',\n        // credential_id: '',\n        // aws_vpc_identifier: '',\n        // aws_vpc_subnet_public: '',\n        // aws_vpc_subnet_private: '',\n        // aws_vpc_security_groups: '',\n      },\n    ],\n  },\n};\n```\n",
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"pipeline-flood\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"main\": \"handler.js\",\n  \"engines\": {\n    \"node\": \">=4.3\"\n  },\n  \"dependencies\": {\n    \"ajv\": \"^5.3.0\",\n    \"babel-runtime\": \"6.11.6\",\n    \"bunyan\": \"^1.8.12\",\n    \"error\": \"^7.0.2\",\n    \"extract-zip\": \"^1.6.6\",\n    \"node-zip\": \"^1.1.1\",\n    \"request-promise-native\": \"^1.0.5\",\n    \"uuid\": \"^3.1.0\"\n  },\n  \"devDependencies\": {\n    \"aws-sdk\": \"^2.6.7\",\n    \"aws-sdk-mock\": \"~1.6.1\",\n    \"babel-eslint\": \"^7.2.3\",\n    \"babel-jest\": \"^20.0.3\",\n    \"babel-loader\": \"^7.0.0\",\n    \"babel-polyfill\": \"^6.23.0\",\n    \"babel-preset-env\": \"^1.4.0\",\n    \"esdoc\": \"^1.0.2\",\n    \"esdoc-coverage-plugin\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^3.1.1\",\n    \"eslint-config-airbnb\": \"^9.0.1\",\n    \"eslint-plugin-import\": \"^1.11.1\",\n    \"eslint-plugin-jsx-a11y\": \"^2.0.1\",\n    \"eslint-plugin-react\": \"^5.2.2\",\n    \"faker\": \"~3.1.0\",\n    \"jest\": \"^21.2.1\",\n    \"nock\": \"^9.0.14\",\n    \"pre-commit\": \"^1.2.2\",\n    \"uglifyjs-webpack-plugin\": \"^1.0.1\",\n    \"webpack\": \"^2.4.1\"\n  },\n  \"babel\": {\n    \"presets\": [\n      [\n        \"env\",\n        {\n          \"targets\": {\n            \"node\": \"6.1\"\n          }\n        }\n      ]\n    ]\n  },\n  \"jest\": {\n    \"transform\": {\n      \"\\\\.(js|jsx)$\": \"babel-jest\",\n      \"\\\\.(json)$\": \"<rootDir>/__tests__/__utils__/fileTransformer.js\"\n    },\n    \"moduleNameMapper\": {\n      \"^@functions/(.+)\": \"<rootDir>/functions/$1\"\n    },\n    \"setupTestFrameworkScriptFile\": \"<rootDir>/__tests__/__utils__/setup.js\"\n  },\n  \"eslintConfig\": {\n    \"parser\": \"babel-eslint\",\n    \"extends\": \"airbnb\",\n    \"env\": {\n      \"jest\": true\n    }\n  },\n  \"pre-commit\": [\n    \"lint\",\n    \"test\"\n  ],\n  \"scripts\": {\n    \"clean\": \"./clean.sh\",\n    \"build\": \"webpack --progress --colors\",\n    \"build:doc\": \"esdoc\",\n    \"lint\": \"eslint events __tests__ functions pages test handler.js webpack.config.js\",\n    \"lint:fix\": \"eslint --fix $1\",\n    \"jest\": \"NODE_ENV=test jest __tests__/.+/*.test.js --coverage\",\n    \"test\": \"npm run jest\",\n    \"test:watch\": \"npm run jest -- --watch\"\n  }\n}\n",
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 172,
    "kind": "testFile",
    "name": "__tests__/functions/pipeline/pipeline/artifact.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport Artifact from '@functions/pipeline/pipeline/artifact';\n\nimport S3 from 'aws-sdk/clients/s3';\nimport AWS from 'aws-sdk-mock';\nimport faker from 'faker';\nimport Zip from 'node-zip';\nimport fs from 'fs';\n\ndescribe('Artifact', () => {\n  const bucketName = faker.random.uuid();\n\n  const objectKey = faker.random.uuid();\n\n  const secretAccessKey = faker.random.uuid();\n\n  const sessionToken = faker.random.uuid();\n\n  const accessKeyId = faker.random.uuid();\n\n  const credentials = { secretAccessKey, sessionToken, accessKeyId };\n\n  const location = { bucketName, objectKey };\n\n  describe('#id', () => {\n    it('returns the correct value', () => {\n      const artifact = new Artifact(location, credentials);\n      expect(artifact.id).toEqual(expect.stringMatching(/^[-a-zA-Z0-9]+$/));\n    });\n  });\n\n  describe('#filename', () => {\n    it('returns the correct value', () => {\n      const artifact = new Artifact(location, credentials);\n      expect(artifact.filename).toEqual(`${artifact.id}.zip`);\n    });\n  });\n\n  describe('#filepath', () => {\n    it('returns the correct value', () => {\n      const artifact = new Artifact(location, credentials);\n      expect(artifact.filepath).toEqual(`/tmp/${artifact.id}.zip`);\n    });\n  });\n\n  describe('#dir', () => {\n    it('returns the correct value', () => {\n      const artifact = new Artifact(location, credentials);\n      expect(artifact.dir).toEqual(expect.stringMatching(/^\\/tmp\\/[-a-zA-Z0-9]+$/));\n    });\n  });\n\n  describe('#bucketName', () => {\n    it('returns the correct value', () => {\n      const artifact = new Artifact(location, credentials);\n      expect(artifact.bucketName).toEqual(bucketName);\n    });\n  });\n\n  describe('#objectKey', () => {\n    it('returns the correct value', () => {\n      const artifact = new Artifact(location, credentials);\n      expect(artifact.objectKey).toEqual(objectKey);\n    });\n  });\n\n  describe('#secretAccessKey', () => {\n    it('returns the correct value', () => {\n      const artifact = new Artifact(location, credentials);\n      expect(artifact.secretAccessKey).toEqual(secretAccessKey);\n    });\n  });\n\n  describe('#sessionToken', () => {\n    it('returns the correct value', () => {\n      const artifact = new Artifact(location, credentials);\n      expect(artifact.sessionToken).toEqual(sessionToken);\n    });\n  });\n\n  describe('#accessKeyId', () => {\n    it('returns the correct value', () => {\n      const artifact = new Artifact(location, credentials);\n      expect(artifact.accessKeyId).toEqual(accessKeyId);\n    });\n  });\n\n  describe('#ready', () => {\n    const artifact = new Artifact(location, credentials);\n\n    const { dir, filepath } = artifact;\n\n    const key = faker.random.word();\n\n    const value = faker.random.number();\n\n    const jsonFile = `${faker.random.uuid()}.json`;\n\n    const data = JSON.stringify({ [key]: value });\n\n    describe('when the artifact readys successfully', () => {\n      beforeEach(() => {\n        const zipFile = new Zip();\n        zipFile.file(jsonFile, data);\n        const zipped = zipFile.generate({ base64: false, compression: 'DEFLATE' });\n        AWS.mock('S3', 'getObject', (params, cb) => {\n          expect(params).toEqual(expect.objectContaining({\n            Bucket: bucketName,\n            Key: objectKey,\n          }));\n          cb(null, { Body: new Buffer(zipped, 'binary') });\n        });\n      });\n\n      afterEach(() => {\n        fs.unlinkSync(filepath);\n        fs.unlinkSync(`${dir}/${jsonFile}`);\n        fs.rmdirSync(dir);\n        AWS.restore('S3', 'getObject');\n      });\n\n      it('fetches, loads and unzips correctly', () =>\n        expect(artifact.ready()).resolves.toBe(true));\n    });\n\n    describe('when the artifact fails to ready', () => {\n      const invalidArtifact = new Artifact({}, credentials);\n\n      it('rejects with an error', () =>\n        expect(invalidArtifact.ready()).rejects.toEqual(expect.any(Error)));\n    });\n  });\n\n  describe('#get', () => {\n    describe('when the file exists', () => {\n      const artifact = new Artifact(location, credentials);\n\n      const { dir } = artifact;\n\n      const filename = faker.random.uuid();\n\n      const data = JSON.stringify({ [faker.random.word()]: faker.random.number() });\n\n      beforeEach(() => {\n        fs.mkdirSync(dir);\n        fs.writeFileSync(`${dir}/${filename}`, data, { encoding: 'utf8' });\n      });\n\n      afterEach(() => {\n        fs.unlinkSync(`${dir}/${filename}`);\n        fs.rmdirSync(dir);\n      });\n\n      it('should return the file', () => {\n        expect(artifact.get(filename)).toEqual(data);\n      });\n    });\n\n    describe('when the file does not exist', () => {\n      const artifact = new Artifact(location, credentials);\n\n      const { dir } = artifact;\n\n      const filename = faker.random.uuid();\n\n      beforeEach(() => {\n        fs.mkdirSync(dir);\n      });\n\n      afterEach(() => {\n        fs.rmdirSync(dir);\n      });\n\n      it('throws an error', () => {\n        expect(() => artifact.get(filename)).toThrow(Error);\n      });\n    });\n  });\n\n  describe('#attribute', () => {\n    describe('when the file and key exists', () => {\n      const artifact = new Artifact(location, credentials);\n\n      const { dir } = artifact;\n\n      const filename = faker.random.uuid();\n\n      const key = faker.random.word();\n\n      const value = faker.random.number();\n\n      const data = JSON.stringify({ [key]: value });\n\n      beforeEach(() => {\n        fs.mkdirSync(dir);\n        fs.writeFileSync(`${dir}/${filename}`, data, { encoding: 'utf8' });\n      });\n\n      afterEach(() => {\n        fs.unlinkSync(`${dir}/${filename}`);\n        fs.rmdirSync(dir);\n      });\n\n      it('should return the file', () => {\n        expect(artifact.attribute(filename, key)).toEqual(value);\n      });\n    });\n\n    describe('when the files does not exist', () => {\n      const artifact = new Artifact(location, credentials);\n\n      const { dir } = artifact;\n\n      const filename = faker.random.uuid();\n\n      const key = faker.random.word();\n\n      beforeEach(() => {\n        fs.mkdirSync(dir);\n      });\n\n      afterEach(() => {\n        fs.rmdirSync(dir);\n      });\n\n      it('should throw an error', () => {\n        expect(() => artifact.attribute(filename, key)).toThrow(Error);\n      });\n    });\n\n    describe('when the key is not present', () => {\n      const artifact = new Artifact(location, credentials);\n\n      const { dir } = artifact;\n\n      const filename = faker.random.uuid();\n\n      const key = faker.random.word();\n\n      const data = JSON.stringify({});\n\n      beforeEach(() => {\n        fs.mkdirSync(dir);\n        fs.writeFileSync(`${dir}/${filename}`, data, { encoding: 'utf8' });\n      });\n\n      afterEach(() => {\n        fs.unlinkSync(`${dir}/${filename}`);\n        fs.rmdirSync(dir);\n      });\n\n      it('should throw an error', () => {\n        expect(() => artifact.attribute(filename, key)).toThrow(Error);\n      });\n    });\n  });\n\n  describe('#unzip', () => {\n    describe('when the artifact can be unzipped', () => {\n      const artifact = new Artifact(location, credentials);\n\n      const { filepath } = artifact;\n\n      const key = `${faker.random.uuid()}.json`;\n\n      const data = JSON.stringify({ [faker.random.word()]: faker.random.number() });\n\n      beforeEach(() => {\n        const zipFile = new Zip();\n        zipFile.file(key, data);\n        const zipped = zipFile.generate({ base64: false, compression: 'DEFLATE' });\n        fs.writeFileSync(filepath, zipped, 'binary');\n      });\n\n      afterEach(() => {\n        fs.unlinkSync(filepath);\n      });\n\n      it('should unzip the file', async () => {\n        const success = await artifact.unzip();\n        expect(success).toBe(true);\n        expect(artifact.get(key)).toEqual(data);\n      });\n    });\n\n    describe('when the artifact cannot be unzipped', () => {\n      const artifact = new Artifact(location, credentials);\n\n      const { filepath } = artifact;\n\n      beforeEach(() => {\n        fs.writeFileSync(filepath, '', 'utf8');\n      });\n\n      afterEach(() => {\n        fs.unlinkSync(filepath);\n      });\n\n      it('reject with an error', async () =>\n        expect(artifact.unzip()).rejects.toEqual(expect.any(Error)));\n    });\n  });\n\n  describe('#write', () => {\n    const artifact = new Artifact(location, credentials);\n\n    const data = JSON.stringify({ [faker.random.word()]: faker.random.number() });\n\n    it('writes a file to the correct location', () =>\n      expect(artifact.write(data)).resolves.toEqual(true));\n\n    afterEach(() => {\n      fs.unlinkSync(artifact.filepath);\n    });\n  });\n\n  describe('#fetch', () => {\n    describe('when the artifact can be retrieved', () => {\n      const artifact = new Artifact(location, credentials);\n\n      const data = JSON.stringify({ [faker.random.word()]: faker.random.number() });\n\n      beforeEach(() => {\n        AWS.mock('S3', 'getObject', (params, cb) => {\n          expect(params).toEqual(expect.objectContaining({\n            Bucket: bucketName,\n            Key: objectKey,\n          }));\n          cb(null, { Body: new Buffer(data) });\n        });\n      });\n\n      afterEach(() => {\n        AWS.restore('S3', 'getObject');\n      });\n\n      it('should retrieve the correct data', () =>\n        expect(artifact.fetch()).resolves.toEqual(new Buffer(data)));\n    });\n\n    describe('when the artifact cannot be retrieved', () => {\n      const artifact = new Artifact(location, credentials);\n\n      beforeEach(() => {\n        AWS.mock('S3', 'getObject', (params, cb) => {\n          cb(new Error('TEST'));\n        });\n      });\n\n      afterEach(() => {\n        AWS.restore('S3', 'getObject');\n      });\n\n      it('should reject with an error', () =>\n        expect(artifact.fetch()).rejects.toEqual(expect.any(Error)));\n    });\n  });\n\n  describe('#client', () => {\n    it('returns an S3 client', () => {\n      const artifact = new Artifact(location, credentials);\n      expect(artifact.client).toBeInstanceOf(S3);\n    });\n  });\n});\n\ndescribe('Artifact#toArtifact', () => {\n  const bucketName = faker.random.uuid();\n\n  const objectKey = faker.random.uuid();\n\n  const secretAccessKey = faker.random.uuid();\n\n  const sessionToken = faker.random.uuid();\n\n  const accessKeyId = faker.random.uuid();\n\n  const credentials = { secretAccessKey, sessionToken, accessKeyId };\n\n  const name = faker.random.word();\n\n  const artifact = { name, location: { s3Location: { bucketName, objectKey } } };\n\n  it('correctly builds an artifact instance', () => {\n    const obj = Artifact.toArtifact(artifact, credentials);\n    expect(obj).toBeInstanceOf(Artifact);\n    expect(obj.bucketName).toEqual(bucketName);\n    expect(obj.objectKey).toEqual(objectKey);\n    expect(obj.secretAccessKey).toEqual(secretAccessKey);\n    expect(obj.sessionToken).toEqual(sessionToken);\n    expect(obj.accessKeyId).toEqual(accessKeyId);\n  });\n});\n\ndescribe('Artifact#toArtifactMapEntry', () => {\n  const bucketName = faker.random.uuid();\n\n  const objectKey = faker.random.uuid();\n\n  const secretAccessKey = faker.random.uuid();\n\n  const sessionToken = faker.random.uuid();\n\n  const accessKeyId = faker.random.uuid();\n\n  const credentials = { secretAccessKey, sessionToken, accessKeyId };\n\n  const name = faker.random.word();\n\n  const artifact = { name, location: { s3Location: { bucketName, objectKey } } };\n\n  it('correctly builds an artifact instance', () => {\n    const arr = Artifact.toArtifactMapEntry(artifact, credentials);\n    expect(arr[0]).toEqual(name);\n    expect(arr[1]).toBeInstanceOf(Artifact);\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/pipeline/pipeline/artifact.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "access": null,
    "description": "Artifact",
    "lineNumber": 11
  },
  {
    "__docId__": 174,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe1",
    "access": null,
    "description": "#id",
    "lineNumber": 26
  },
  {
    "__docId__": 175,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe1.it2",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 27
  },
  {
    "__docId__": 176,
    "kind": "test",
    "name": "describe3",
    "testId": 3,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe3",
    "access": null,
    "description": "#filename",
    "lineNumber": 33
  },
  {
    "__docId__": 177,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe3",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe3.it4",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 34
  },
  {
    "__docId__": 178,
    "kind": "test",
    "name": "describe5",
    "testId": 5,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe5",
    "access": null,
    "description": "#filepath",
    "lineNumber": 40
  },
  {
    "__docId__": 179,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe5",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe5.it6",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 41
  },
  {
    "__docId__": 180,
    "kind": "test",
    "name": "describe7",
    "testId": 7,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe7",
    "access": null,
    "description": "#dir",
    "lineNumber": 47
  },
  {
    "__docId__": 181,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe7.it8",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 48
  },
  {
    "__docId__": 182,
    "kind": "test",
    "name": "describe9",
    "testId": 9,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe9",
    "access": null,
    "description": "#bucketName",
    "lineNumber": 54
  },
  {
    "__docId__": 183,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe9",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe9.it10",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 55
  },
  {
    "__docId__": 184,
    "kind": "test",
    "name": "describe11",
    "testId": 11,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe11",
    "access": null,
    "description": "#objectKey",
    "lineNumber": 61
  },
  {
    "__docId__": 185,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe11.it12",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 62
  },
  {
    "__docId__": 186,
    "kind": "test",
    "name": "describe13",
    "testId": 13,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe13",
    "access": null,
    "description": "#secretAccessKey",
    "lineNumber": 68
  },
  {
    "__docId__": 187,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe13.it14",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 69
  },
  {
    "__docId__": 188,
    "kind": "test",
    "name": "describe15",
    "testId": 15,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe15",
    "access": null,
    "description": "#sessionToken",
    "lineNumber": 75
  },
  {
    "__docId__": 189,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe15",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe15.it16",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 76
  },
  {
    "__docId__": 190,
    "kind": "test",
    "name": "describe17",
    "testId": 17,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe17",
    "access": null,
    "description": "#accessKeyId",
    "lineNumber": 82
  },
  {
    "__docId__": 191,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe17",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe17.it18",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 83
  },
  {
    "__docId__": 192,
    "kind": "test",
    "name": "describe19",
    "testId": 19,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe19",
    "access": null,
    "description": "#ready",
    "lineNumber": 89
  },
  {
    "__docId__": 193,
    "kind": "test",
    "name": "describe20",
    "testId": 20,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe19.describe20",
    "access": null,
    "description": "when the artifact readys successfully",
    "lineNumber": 102
  },
  {
    "__docId__": 194,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe19.describe20",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe19.describe20.it21",
    "access": null,
    "description": "fetches, loads and unzips correctly",
    "lineNumber": 123
  },
  {
    "__docId__": 195,
    "kind": "test",
    "name": "describe22",
    "testId": 22,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe19.describe22",
    "access": null,
    "description": "when the artifact fails to ready",
    "lineNumber": 127
  },
  {
    "__docId__": 196,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe19.describe22",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe19.describe22.it23",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 130
  },
  {
    "__docId__": 197,
    "kind": "test",
    "name": "describe24",
    "testId": 24,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe24",
    "access": null,
    "description": "#get",
    "lineNumber": 135
  },
  {
    "__docId__": 198,
    "kind": "test",
    "name": "describe25",
    "testId": 25,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe24",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe24.describe25",
    "access": null,
    "description": "when the file exists",
    "lineNumber": 136
  },
  {
    "__docId__": 199,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe24.describe25",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe24.describe25.it26",
    "access": null,
    "description": "should return the file",
    "lineNumber": 155
  },
  {
    "__docId__": 200,
    "kind": "test",
    "name": "describe27",
    "testId": 27,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe24",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe24.describe27",
    "access": null,
    "description": "when the file does not exist",
    "lineNumber": 160
  },
  {
    "__docId__": 201,
    "kind": "test",
    "name": "it28",
    "testId": 28,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe24.describe27",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe24.describe27.it28",
    "access": null,
    "description": "throws an error",
    "lineNumber": 175
  },
  {
    "__docId__": 202,
    "kind": "test",
    "name": "describe29",
    "testId": 29,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29",
    "access": null,
    "description": "#attribute",
    "lineNumber": 181
  },
  {
    "__docId__": 203,
    "kind": "test",
    "name": "describe30",
    "testId": 30,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29.describe30",
    "access": null,
    "description": "when the file and key exists",
    "lineNumber": 182
  },
  {
    "__docId__": 204,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29.describe30",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29.describe30.it31",
    "access": null,
    "description": "should return the file",
    "lineNumber": 205
  },
  {
    "__docId__": 205,
    "kind": "test",
    "name": "describe32",
    "testId": 32,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29.describe32",
    "access": null,
    "description": "when the files does not exist",
    "lineNumber": 210
  },
  {
    "__docId__": 206,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29.describe32",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29.describe32.it33",
    "access": null,
    "description": "should throw an error",
    "lineNumber": 227
  },
  {
    "__docId__": 207,
    "kind": "test",
    "name": "describe34",
    "testId": 34,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29.describe34",
    "access": null,
    "description": "when the key is not present",
    "lineNumber": 232
  },
  {
    "__docId__": 208,
    "kind": "test",
    "name": "it35",
    "testId": 35,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29.describe34",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe29.describe34.it35",
    "access": null,
    "description": "should throw an error",
    "lineNumber": 253
  },
  {
    "__docId__": 209,
    "kind": "test",
    "name": "describe36",
    "testId": 36,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe36",
    "access": null,
    "description": "#unzip",
    "lineNumber": 259
  },
  {
    "__docId__": 210,
    "kind": "test",
    "name": "describe37",
    "testId": 37,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe36",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe36.describe37",
    "access": null,
    "description": "when the artifact can be unzipped",
    "lineNumber": 260
  },
  {
    "__docId__": 211,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe36.describe37",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe36.describe37.it38",
    "access": null,
    "description": "should unzip the file",
    "lineNumber": 280
  },
  {
    "__docId__": 212,
    "kind": "test",
    "name": "describe39",
    "testId": 39,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe36",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe36.describe39",
    "access": null,
    "description": "when the artifact cannot be unzipped",
    "lineNumber": 287
  },
  {
    "__docId__": 213,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe36.describe39",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe36.describe39.it40",
    "access": null,
    "description": "reject with an error",
    "lineNumber": 300
  },
  {
    "__docId__": 214,
    "kind": "test",
    "name": "describe41",
    "testId": 41,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe41",
    "access": null,
    "description": "#write",
    "lineNumber": 305
  },
  {
    "__docId__": 215,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe41",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe41.it42",
    "access": null,
    "description": "writes a file to the correct location",
    "lineNumber": 310
  },
  {
    "__docId__": 216,
    "kind": "test",
    "name": "describe43",
    "testId": 43,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe43",
    "access": null,
    "description": "#fetch",
    "lineNumber": 318
  },
  {
    "__docId__": 217,
    "kind": "test",
    "name": "describe44",
    "testId": 44,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe43.describe44",
    "access": null,
    "description": "when the artifact can be retrieved",
    "lineNumber": 319
  },
  {
    "__docId__": 218,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe43.describe44",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe43.describe44.it45",
    "access": null,
    "description": "should retrieve the correct data",
    "lineNumber": 338
  },
  {
    "__docId__": 219,
    "kind": "test",
    "name": "describe46",
    "testId": 46,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe43",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe43.describe46",
    "access": null,
    "description": "when the artifact cannot be retrieved",
    "lineNumber": 342
  },
  {
    "__docId__": 220,
    "kind": "test",
    "name": "it47",
    "testId": 47,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe43.describe46",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe43.describe46.it47",
    "access": null,
    "description": "should reject with an error",
    "lineNumber": 355
  },
  {
    "__docId__": 221,
    "kind": "test",
    "name": "describe48",
    "testId": 48,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe48",
    "access": null,
    "description": "#client",
    "lineNumber": 360
  },
  {
    "__docId__": 222,
    "kind": "test",
    "name": "it49",
    "testId": 49,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe48",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe0.describe48.it49",
    "access": null,
    "description": "returns an S3 client",
    "lineNumber": 361
  },
  {
    "__docId__": 223,
    "kind": "test",
    "name": "describe50",
    "testId": 50,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe50",
    "access": null,
    "description": "Artifact#toArtifact",
    "lineNumber": 368
  },
  {
    "__docId__": 224,
    "kind": "test",
    "name": "it51",
    "testId": 51,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe50",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe50.it51",
    "access": null,
    "description": "correctly builds an artifact instance",
    "lineNumber": 385
  },
  {
    "__docId__": 225,
    "kind": "test",
    "name": "describe52",
    "testId": 52,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe52",
    "access": null,
    "description": "Artifact#toArtifactMapEntry",
    "lineNumber": 396
  },
  {
    "__docId__": 226,
    "kind": "test",
    "name": "it53",
    "testId": 53,
    "memberof": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe52",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/artifact.test.js~describe52.it53",
    "access": null,
    "description": "correctly builds an artifact instance",
    "lineNumber": 413
  },
  {
    "__docId__": 227,
    "kind": "testFile",
    "name": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport Parameters from '@functions/pipeline/pipeline/parameters';\n\nimport faker from 'faker';\n\ndescribe('Parameters', () => {\n  const artifactName = faker.random.word();\n\n  const attribute = faker.random.number();\n\n  const artifacts = {\n    [artifactName]: {\n      ready: async () => true,\n      attribute: () => attribute,\n    },\n  };\n\n  const values = {\n    keyA: {\n      'Fn::GetParam': [artifactName, faker.random.word(), faker.random.word()],\n    },\n    keyB: faker.random.words(),\n  };\n\n  describe('#parameters', () => {\n    const parameters = new Parameters(values, artifacts);\n\n    it('returns the correct value', () => {\n      expect(parameters.parameters).toEqual(values);\n    });\n  });\n\n  describe('#artifacts', () => {\n    const parameters = new Parameters(values, artifacts);\n\n    it('returns the correct value', () => {\n      expect(parameters.artifacts).toEqual(artifacts);\n    });\n  });\n\n  describe('#toEntries', () => {\n    test('TODO: Not implemented');\n  });\n\n  describe('#toObject', () => {\n    describe('when values are valid', () => {\n      const parameters = new Parameters(values, artifacts);\n\n      it('correctly builds a map', () =>\n        expect(parameters.toObject()).resolves.toEqual(expect.objectContaining({\n          keyA: attribute,\n          keyB: values.keyB,\n        })));\n    });\n\n    describe('when Fn::GetParam is defined', () => {\n      describe('when the artifact exists', () => {\n        const parameters = new Parameters(values, artifacts);\n\n        it('returns the correct value', () =>\n          expect(parameters.toObject()).resolves.toEqual(expect.objectContaining({\n            keyA: attribute,\n          })));\n      });\n\n      describe('when the artifact does not exist', () => {\n        const parameters = new Parameters(values, {});\n\n        it('rejects with an error', () =>\n          expect(parameters.toObject()).rejects.toEqual(expect.any(Error)));\n      });\n    });\n\n    describe('when values contains an unrecognised Fn:: key', () => {\n      const invalidValues = {\n        key: {\n          'Fn::UnrecognisedAtt': faker.random.number(),\n        },\n      };\n\n      const parameters = new Parameters(invalidValues, artifacts);\n\n      it('rejects with an error', () =>\n        expect(parameters.toObject()).rejects.toEqual(expect.any(Error)));\n    });\n  });\n\n  describe('#toOverrides', () => {\n    const parameters = new Parameters(values, artifacts);\n\n    it('correctly builds a Java Overrides string', async () => {\n      const overrides = await parameters.toOverrides();\n      const str = `-DkeyA=\"${attribute}\" -DkeyB=\"${values.keyB}\"`;\n      expect(overrides).toEqual(expect.stringMatching(str));\n    });\n  });\n\n  describe('#fetch', () => {\n    describe('when the artifact, file and key exists', () => {\n      const parameters = new Parameters(null, artifacts);\n\n      it('fetches the correct value', () => {\n        const params = [artifactName, faker.random.word(), faker.random.word()];\n        return expect(parameters.fetch(...params)).resolves.toEqual(attribute);\n      });\n    });\n\n    describe('when the artifact does not exist', () => {\n      const notFoundArtifacts = {\n        [artifactName]: {\n          ready: async () => { throw new Error('TEST'); },\n          attribute: () => attribute,\n        },\n      };\n\n      const parameters = new Parameters(values, notFoundArtifacts);\n\n      it('rejects with an error', () => {\n        const params = [artifactName, null, null];\n        return expect(parameters.fetch(...params)).rejects.toEqual(expect.any(Error));\n      });\n    });\n\n    describe('when the file or key/value does not exist', () => {\n      const invalidArtifactFile = {\n        [artifactName]: {\n          ready: async () => true,\n          attribute: () => { throw new Error('TEST'); },\n        },\n      };\n\n      const parameters = new Parameters(values, invalidArtifactFile);\n\n      it('rejects with an error', () => {\n        const params = [artifactName, null, null];\n        return expect(parameters.fetch(...params)).rejects.toEqual(expect.any(Error));\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/pipeline/pipeline/parameters/parameters.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 228,
    "kind": "test",
    "name": "describe54",
    "testId": 54,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54",
    "access": null,
    "description": "Parameters",
    "lineNumber": 7
  },
  {
    "__docId__": 229,
    "kind": "test",
    "name": "describe55",
    "testId": 55,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe55",
    "access": null,
    "description": "#parameters",
    "lineNumber": 26
  },
  {
    "__docId__": 230,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe55",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe55.it56",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 29
  },
  {
    "__docId__": 231,
    "kind": "test",
    "name": "describe57",
    "testId": 57,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe57",
    "access": null,
    "description": "#artifacts",
    "lineNumber": 34
  },
  {
    "__docId__": 232,
    "kind": "test",
    "name": "it58",
    "testId": 58,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe57",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe57.it58",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 37
  },
  {
    "__docId__": 233,
    "kind": "test",
    "name": "describe59",
    "testId": 59,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe59",
    "access": null,
    "description": "#toEntries",
    "lineNumber": 42
  },
  {
    "__docId__": 234,
    "kind": "test",
    "name": "test60",
    "testId": 60,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe59.test60",
    "access": null,
    "description": "TODO: Not implemented",
    "lineNumber": 43
  },
  {
    "__docId__": 235,
    "kind": "test",
    "name": "describe61",
    "testId": 61,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61",
    "access": null,
    "description": "#toObject",
    "lineNumber": 46
  },
  {
    "__docId__": 236,
    "kind": "test",
    "name": "describe62",
    "testId": 62,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe62",
    "access": null,
    "description": "when values are valid",
    "lineNumber": 47
  },
  {
    "__docId__": 237,
    "kind": "test",
    "name": "it63",
    "testId": 63,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe62",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe62.it63",
    "access": null,
    "description": "correctly builds a map",
    "lineNumber": 50
  },
  {
    "__docId__": 238,
    "kind": "test",
    "name": "describe64",
    "testId": 64,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe64",
    "access": null,
    "description": "when Fn::GetParam is defined",
    "lineNumber": 57
  },
  {
    "__docId__": 239,
    "kind": "test",
    "name": "describe65",
    "testId": 65,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe64",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe64.describe65",
    "access": null,
    "description": "when the artifact exists",
    "lineNumber": 58
  },
  {
    "__docId__": 240,
    "kind": "test",
    "name": "it66",
    "testId": 66,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe64.describe65",
    "testDepth": 4,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe64.describe65.it66",
    "access": null,
    "description": "returns the correct value",
    "lineNumber": 61
  },
  {
    "__docId__": 241,
    "kind": "test",
    "name": "describe67",
    "testId": 67,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe64",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe64.describe67",
    "access": null,
    "description": "when the artifact does not exist",
    "lineNumber": 67
  },
  {
    "__docId__": 242,
    "kind": "test",
    "name": "it68",
    "testId": 68,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe64.describe67",
    "testDepth": 4,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe64.describe67.it68",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 70
  },
  {
    "__docId__": 243,
    "kind": "test",
    "name": "describe69",
    "testId": 69,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe69",
    "access": null,
    "description": "when values contains an unrecognised Fn:: key",
    "lineNumber": 75
  },
  {
    "__docId__": 244,
    "kind": "test",
    "name": "it70",
    "testId": 70,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe69",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe61.describe69.it70",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 84
  },
  {
    "__docId__": 245,
    "kind": "test",
    "name": "describe71",
    "testId": 71,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe71",
    "access": null,
    "description": "#toOverrides",
    "lineNumber": 89
  },
  {
    "__docId__": 246,
    "kind": "test",
    "name": "it72",
    "testId": 72,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe71",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe71.it72",
    "access": null,
    "description": "correctly builds a Java Overrides string",
    "lineNumber": 92
  },
  {
    "__docId__": 247,
    "kind": "test",
    "name": "describe73",
    "testId": 73,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73",
    "access": null,
    "description": "#fetch",
    "lineNumber": 99
  },
  {
    "__docId__": 248,
    "kind": "test",
    "name": "describe74",
    "testId": 74,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73.describe74",
    "access": null,
    "description": "when the artifact, file and key exists",
    "lineNumber": 100
  },
  {
    "__docId__": 249,
    "kind": "test",
    "name": "it75",
    "testId": 75,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73.describe74",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73.describe74.it75",
    "access": null,
    "description": "fetches the correct value",
    "lineNumber": 103
  },
  {
    "__docId__": 250,
    "kind": "test",
    "name": "describe76",
    "testId": 76,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73.describe76",
    "access": null,
    "description": "when the artifact does not exist",
    "lineNumber": 109
  },
  {
    "__docId__": 251,
    "kind": "test",
    "name": "it77",
    "testId": 77,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73.describe76",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73.describe76.it77",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 119
  },
  {
    "__docId__": 252,
    "kind": "test",
    "name": "describe78",
    "testId": 78,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73.describe78",
    "access": null,
    "description": "when the file or key/value does not exist",
    "lineNumber": 125
  },
  {
    "__docId__": 253,
    "kind": "test",
    "name": "it79",
    "testId": 79,
    "memberof": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73.describe78",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/parameters/parameters.test.js~describe54.describe73.describe78.it79",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 135
  },
  {
    "__docId__": 254,
    "kind": "testFile",
    "name": "__tests__/functions/pipeline/pipeline/resume.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport Resume from '@functions/pipeline/pipeline/resume';\n\nimport faker from 'faker';\nimport AWS from 'aws-sdk-mock';\n\ndescribe('Resume', () => {\n  const executionArn = faker.random.uuid();\n\n  describe('#new', () => {\n    const resume = new Resume(executionArn);\n\n    it('returns the correct values', () => {\n      expect(resume.executionArn).toEqual(executionArn);\n    });\n  });\n\n  describe('#perform', () => {\n    describe('when the status can be retrieved', () => {\n      describe('when the state machine is running', () => {\n        const status = 'RUNNING';\n\n        beforeEach(() => {\n          AWS.mock('StepFunctions', 'describeExecution', (params, cb) => {\n            process.nextTick(() => { cb(null, { status }); });\n          });\n        });\n\n        afterEach(() => {\n          AWS.restore('StepFunctions', 'describeExecution');\n        });\n\n        it('returns true', () => {\n          const resume = new Resume(executionArn);\n          return expect(resume.perform()).resolves.toEqual({ resume: true, message: '' });\n        });\n      });\n\n      describe('when the state machine is not running', () => {\n        describe('when the state machine has succeeded', () => {\n          const status = 'SUCCEEDED';\n\n          const output = JSON.stringify({ [faker.random.uuid()]: faker.random.words() });\n\n          beforeEach(() => {\n            AWS.mock('StepFunctions', 'describeExecution', (params, cb) => {\n              process.nextTick(() => { cb(null, { status, output }); });\n            });\n          });\n\n          afterEach(() => {\n            AWS.restore('StepFunctions', 'describeExecution');\n          });\n\n          it('returns false', () => {\n            const resume = new Resume(executionArn);\n            return expect(resume.perform()).resolves.toEqual({ resume: false, message: output });\n          });\n        });\n\n        describe('when the state machine has failed', () => {\n          const status = 'FAILED';\n\n          const output = JSON.stringify({ [faker.random.uuid()]: faker.random.words() });\n\n          beforeEach(() => {\n            AWS.mock('StepFunctions', 'describeExecution', (params, cb) => {\n              process.nextTick(() => { cb(null, { status, output }); });\n            });\n          });\n\n          afterEach(() => {\n            AWS.restore('StepFunctions', 'describeExecution');\n          });\n\n          it('rejects with an error', () => {\n            const resume = new Resume(executionArn);\n            return expect(resume.perform()).rejects.toEqual(expect.any(Error));\n          });\n        });\n      });\n    });\n\n    describe('when the status cannot be retrieved', () => {\n      test('TODO: not implemented');\n    });\n  });\n\n  describe('#status', () => {\n    const status = faker.random.arrayElement(['SUCCEEDED', 'RUNNING', 'TIMED_OUT']);\n\n    beforeEach(() => {\n      AWS.mock('StepFunctions', 'describeExecution', (params, cb) => {\n        process.nextTick(() => { cb(null, { status, output: '' }); });\n      });\n    });\n\n    afterEach(() => {\n      AWS.restore('StepFunctions', 'describeExecution');\n    });\n\n    it('returns the correct status', () => {\n      const resume = new Resume(executionArn);\n      return expect(resume.status()).resolves.toEqual({ status, message: '' });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/pipeline/pipeline/resume.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 255,
    "kind": "test",
    "name": "describe80",
    "testId": 80,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80",
    "access": null,
    "description": "Resume",
    "lineNumber": 8
  },
  {
    "__docId__": 256,
    "kind": "test",
    "name": "describe81",
    "testId": 81,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe81",
    "access": null,
    "description": "#new",
    "lineNumber": 11
  },
  {
    "__docId__": 257,
    "kind": "test",
    "name": "it82",
    "testId": 82,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe81",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe81.it82",
    "access": null,
    "description": "returns the correct values",
    "lineNumber": 14
  },
  {
    "__docId__": 258,
    "kind": "test",
    "name": "describe83",
    "testId": 83,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83",
    "access": null,
    "description": "#perform",
    "lineNumber": 19
  },
  {
    "__docId__": 259,
    "kind": "test",
    "name": "describe84",
    "testId": 84,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84",
    "access": null,
    "description": "when the status can be retrieved",
    "lineNumber": 20
  },
  {
    "__docId__": 260,
    "kind": "test",
    "name": "describe85",
    "testId": 85,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe85",
    "access": null,
    "description": "when the state machine is running",
    "lineNumber": 21
  },
  {
    "__docId__": 261,
    "kind": "test",
    "name": "it86",
    "testId": 86,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe85",
    "testDepth": 4,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe85.it86",
    "access": null,
    "description": "returns true",
    "lineNumber": 34
  },
  {
    "__docId__": 262,
    "kind": "test",
    "name": "describe87",
    "testId": 87,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe87",
    "access": null,
    "description": "when the state machine is not running",
    "lineNumber": 40
  },
  {
    "__docId__": 263,
    "kind": "test",
    "name": "describe88",
    "testId": 88,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe87",
    "testDepth": 4,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe87.describe88",
    "access": null,
    "description": "when the state machine has succeeded",
    "lineNumber": 41
  },
  {
    "__docId__": 264,
    "kind": "test",
    "name": "it89",
    "testId": 89,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe87.describe88",
    "testDepth": 5,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe87.describe88.it89",
    "access": null,
    "description": "returns false",
    "lineNumber": 56
  },
  {
    "__docId__": 265,
    "kind": "test",
    "name": "describe90",
    "testId": 90,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe87",
    "testDepth": 4,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe87.describe90",
    "access": null,
    "description": "when the state machine has failed",
    "lineNumber": 62
  },
  {
    "__docId__": 266,
    "kind": "test",
    "name": "it91",
    "testId": 91,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe87.describe90",
    "testDepth": 5,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe84.describe87.describe90.it91",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 77
  },
  {
    "__docId__": 267,
    "kind": "test",
    "name": "describe92",
    "testId": 92,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe92",
    "access": null,
    "description": "when the status cannot be retrieved",
    "lineNumber": 85
  },
  {
    "__docId__": 268,
    "kind": "test",
    "name": "test93",
    "testId": 93,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe92",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe83.describe92.test93",
    "access": null,
    "description": "TODO: not implemented",
    "lineNumber": 86
  },
  {
    "__docId__": 269,
    "kind": "test",
    "name": "describe94",
    "testId": 94,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe94",
    "access": null,
    "description": "#status",
    "lineNumber": 90
  },
  {
    "__docId__": 270,
    "kind": "test",
    "name": "it95",
    "testId": 95,
    "memberof": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/resume.test.js~describe80.describe94.it95",
    "access": null,
    "description": "returns the correct status",
    "lineNumber": 103
  },
  {
    "__docId__": 271,
    "kind": "testFile",
    "name": "__tests__/functions/pipeline/pipeline/start.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport Start from '@functions/pipeline/pipeline/start';\nimport Artifact from '@functions/pipeline/pipeline/artifact';\n\nimport faker from 'faker';\nimport AWS from 'aws-sdk-mock';\nimport Zip from 'node-zip';\n\ndescribe('Start', () => {\n  const executionArn = faker.random.uuid();\n\n  const artifactName = faker.random.word();\n\n  const key = faker.random.word();\n\n  const val = faker.internet.url();\n\n  const jsonFile = JSON.stringify({ [key]: val });\n\n  const jsonFileName = faker.system.fileName();\n\n  const jmxFile = faker.random.words();\n\n  const jmxFileName = faker.system.fileName();\n\n  beforeEach(() => {\n    const zipFile = new Zip();\n    zipFile.file(jsonFileName, jsonFile);\n    zipFile.file(jmxFileName, jmxFile);\n    AWS.mock('S3', 'getObject', (params, cb) => {\n      process.nextTick(() => {\n        const zipped = zipFile.generate({ base64: false, compression: 'DEFLATE' });\n        cb(null, { Body: new Buffer(zipped, 'binary') });\n      });\n    });\n  });\n\n  beforeEach(() => {\n    AWS.mock('S3', 'putObject', (params, cb) => {\n      process.nextTick(() => { cb(null, {}); });\n    });\n  });\n\n  beforeEach(() => {\n    AWS.mock('S3', 'getSignedUrl', (params, cb) => {\n      process.nextTick(() => { cb(null, faker.internet.url()); });\n    });\n  });\n\n  beforeEach(() => {\n    AWS.mock('StepFunctions', 'startExecution', (params, cb) => {\n      process.nextTick(() => { cb(null, { executionArn }); });\n    });\n  });\n\n  afterEach(() => {\n    AWS.restore('S3', 'getObject');\n    AWS.restore('S3', 'putObject');\n    AWS.restore('S3', 'getSignedUrl');\n    AWS.restore('StepFunctions', 'startExecution');\n  });\n\n  const job = {\n    data: {\n      actionConfiguration: {\n        configuration: {\n          UserParameters: JSON.stringify({\n            Flood: {\n              tool: 'jmeter',\n            },\n            Parameters: {\n              url: {\n                'Fn::GetParam': [artifactName, jsonFileName, key],\n              },\n            },\n            Files: [\n              `${artifactName}::${jmxFileName}`,\n            ],\n            Grids: [{\n              uuid: faker.random.uuid(),\n            }],\n          }),\n        },\n      },\n      inputArtifacts: [\n        {\n          location: {\n            s3Location: {\n              bucketName: faker.random.word(),\n              objectKey: faker.random.uuid(),\n            },\n          },\n          name: artifactName,\n        },\n      ],\n      artifactCredentials: {\n        secretAccessKey: faker.random.uuid(),\n        sessionToken: faker.random.uuid(),\n        accessKeyId: faker.random.uuid(),\n      },\n    },\n  };\n\n  describe('#new', () => {\n    describe('when the job is valid', () => {\n      it('correctly assigns properties', () => {\n        const start = new Start(job);\n        expect(start.data).toEqual(job.data);\n        expect(start.parameters).toEqual(expect.any(Object));\n        expect(start.artifacts).toEqual(expect.objectContaining({\n          [artifactName]: expect.any(Artifact),\n        }));\n      });\n    });\n\n    describe('when there are no input artifacts', () => {\n      const invalidJob = {\n        data: {\n          actionConfiguration: {\n            configuration: {\n              UserParameters: JSON.stringify({}),\n            },\n          },\n          inputArtifacts: [],\n        },\n      };\n\n      it('throws an error', () => expect(() => new Start(invalidJob)).toThrow(Error));\n    });\n  });\n\n  describe('#userParameters', () => {\n    describe('when data is valid', () => {\n      it('returns the correct values', () => {\n        const start = new Start(job);\n        return expect(start.userParameters()).resolves.toEqual(expect.objectContaining({\n          Files: expect.arrayContaining([expect.any(String)]),\n          Flood: expect.any(Object),\n          Grids: expect.arrayContaining([expect.any(Object)]),\n          Parameters: expect.any(Object),\n        }));\n      });\n    });\n\n    describe('when data is not present', () => {\n      it('rejects with an error', () => {\n        const start = new Start(job);\n        start.parameters = {};\n        return expect(start.userParameters()).rejects.toEqual(expect.any(Error));\n      });\n    });\n\n    describe('when data is not valid', () => {\n      const invalidUserParameters = {\n        Flood: {\n          tool: 'jmeter',\n        },\n        Grids: [{\n          uuid: faker.random.uuid(),\n        }],\n      };\n\n      it('rejects with an error', () => {\n        const start = new Start(job);\n        start.parameters = invalidUserParameters;\n        return expect(start.userParameters()).rejects.toEqual(expect.any(Error));\n      });\n    });\n  });\n\n  describe('#input', () => {\n    describe('when a file artifact exists', () => {\n      describe('when a file is uploaded', () => {\n        describe('when a parameter artifact exists', () => {\n          it('returns a valid state machine input object', () => {\n            const start = new Start(job);\n            return expect(start.input()).resolves.toEqual(expect.objectContaining({\n              files: expect.arrayContaining([\n                expect.stringMatching(/^https?:\\/\\//),\n              ]),\n              flood: expect.objectContaining({\n                override_parameters: expect.stringMatching(new RegExp(`-Durl=\"${val}\"`)),\n              }),\n              grids: expect.arrayContaining([\n                expect.any(Object),\n              ]),\n            }));\n          });\n        });\n      });\n    });\n  });\n\n  describe('#perform', () => {\n    describe('when #input resolves', () => {\n      it('executes step functions with the correct parameters', async () => {\n        const start = new Start(job);\n        const obj = { [faker.random.uuid()]: faker.random.number() };\n        jest.spyOn(start, 'input').mockImplementation(async () => obj);\n        const perform = await start.perform();\n        return expect(perform).toEqual(executionArn);\n      });\n    });\n  });\n\n  describe('#start', () => {\n    describe('when parameters are valid', async () => {\n      it('returns the correct execution arn', async () => {\n        const start = new Start(job);\n        const input = await start.input();\n        return expect(Start.start(JSON.stringify(input))).resolves.toEqual(executionArn);\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/pipeline/pipeline/start.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 272,
    "kind": "test",
    "name": "describe96",
    "testId": 96,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96",
    "access": null,
    "description": "Start",
    "lineNumber": 10
  },
  {
    "__docId__": 273,
    "kind": "test",
    "name": "describe97",
    "testId": 97,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe97",
    "access": null,
    "description": "#new",
    "lineNumber": 105
  },
  {
    "__docId__": 274,
    "kind": "test",
    "name": "describe98",
    "testId": 98,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe97",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe97.describe98",
    "access": null,
    "description": "when the job is valid",
    "lineNumber": 106
  },
  {
    "__docId__": 275,
    "kind": "test",
    "name": "it99",
    "testId": 99,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe97.describe98",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe97.describe98.it99",
    "access": null,
    "description": "correctly assigns properties",
    "lineNumber": 107
  },
  {
    "__docId__": 276,
    "kind": "test",
    "name": "describe100",
    "testId": 100,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe97",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe97.describe100",
    "access": null,
    "description": "when there are no input artifacts",
    "lineNumber": 117
  },
  {
    "__docId__": 277,
    "kind": "test",
    "name": "it101",
    "testId": 101,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe97.describe100",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe97.describe100.it101",
    "access": null,
    "description": "throws an error",
    "lineNumber": 129
  },
  {
    "__docId__": 278,
    "kind": "test",
    "name": "describe102",
    "testId": 102,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102",
    "access": null,
    "description": "#userParameters",
    "lineNumber": 133
  },
  {
    "__docId__": 279,
    "kind": "test",
    "name": "describe103",
    "testId": 103,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102.describe103",
    "access": null,
    "description": "when data is valid",
    "lineNumber": 134
  },
  {
    "__docId__": 280,
    "kind": "test",
    "name": "it104",
    "testId": 104,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102.describe103",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102.describe103.it104",
    "access": null,
    "description": "returns the correct values",
    "lineNumber": 135
  },
  {
    "__docId__": 281,
    "kind": "test",
    "name": "describe105",
    "testId": 105,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102.describe105",
    "access": null,
    "description": "when data is not present",
    "lineNumber": 146
  },
  {
    "__docId__": 282,
    "kind": "test",
    "name": "it106",
    "testId": 106,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102.describe105",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102.describe105.it106",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 147
  },
  {
    "__docId__": 283,
    "kind": "test",
    "name": "describe107",
    "testId": 107,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102.describe107",
    "access": null,
    "description": "when data is not valid",
    "lineNumber": 154
  },
  {
    "__docId__": 284,
    "kind": "test",
    "name": "it108",
    "testId": 108,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102.describe107",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe102.describe107.it108",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 164
  },
  {
    "__docId__": 285,
    "kind": "test",
    "name": "describe109",
    "testId": 109,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe109",
    "access": null,
    "description": "#input",
    "lineNumber": 172
  },
  {
    "__docId__": 286,
    "kind": "test",
    "name": "describe110",
    "testId": 110,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe109",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe109.describe110",
    "access": null,
    "description": "when a file artifact exists",
    "lineNumber": 173
  },
  {
    "__docId__": 287,
    "kind": "test",
    "name": "describe111",
    "testId": 111,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe109.describe110",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe109.describe110.describe111",
    "access": null,
    "description": "when a file is uploaded",
    "lineNumber": 174
  },
  {
    "__docId__": 288,
    "kind": "test",
    "name": "describe112",
    "testId": 112,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe109.describe110.describe111",
    "testDepth": 4,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe109.describe110.describe111.describe112",
    "access": null,
    "description": "when a parameter artifact exists",
    "lineNumber": 175
  },
  {
    "__docId__": 289,
    "kind": "test",
    "name": "it113",
    "testId": 113,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe109.describe110.describe111.describe112",
    "testDepth": 5,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe109.describe110.describe111.describe112.it113",
    "access": null,
    "description": "returns a valid state machine input object",
    "lineNumber": 176
  },
  {
    "__docId__": 290,
    "kind": "test",
    "name": "describe114",
    "testId": 114,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe114",
    "access": null,
    "description": "#perform",
    "lineNumber": 195
  },
  {
    "__docId__": 291,
    "kind": "test",
    "name": "describe115",
    "testId": 115,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe114",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe114.describe115",
    "access": null,
    "description": "when #input resolves",
    "lineNumber": 196
  },
  {
    "__docId__": 292,
    "kind": "test",
    "name": "it116",
    "testId": 116,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe114.describe115",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe114.describe115.it116",
    "access": null,
    "description": "executes step functions with the correct parameters",
    "lineNumber": 197
  },
  {
    "__docId__": 293,
    "kind": "test",
    "name": "describe117",
    "testId": 117,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe117",
    "access": null,
    "description": "#start",
    "lineNumber": 207
  },
  {
    "__docId__": 294,
    "kind": "test",
    "name": "describe118",
    "testId": 118,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe117",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe117.describe118",
    "access": null,
    "description": "when parameters are valid",
    "lineNumber": 208
  },
  {
    "__docId__": 295,
    "kind": "test",
    "name": "it119",
    "testId": 119,
    "memberof": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe117.describe118",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/start.test.js~describe96.describe117.describe118.it119",
    "access": null,
    "description": "returns the correct execution arn",
    "lineNumber": 209
  },
  {
    "__docId__": 296,
    "kind": "testFile",
    "name": "__tests__/functions/pipeline/pipeline/uploader/file.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport File from '@functions/pipeline/pipeline/uploader/file';\n\nimport AWS from 'aws-sdk-mock';\nimport faker from 'faker';\n\ndescribe('File', () => {\n  const data = JSON.stringify({ [faker.random.uuid()]: faker.random.number() });\n\n  const artifact = {\n    ready: async () => true,\n    get: async () => new Buffer(data),\n  };\n\n  const filename = faker.system.fileName();\n\n  describe('#new', () => {\n    it('sets properties correctly', () => {\n      const file = new File(artifact, filename);\n      expect(file.extname).toMatch(/\\.[a-z0-9]+$/);\n      expect(file.artifact).toEqual(artifact);\n      expect(file.filename).toEqual(filename);\n      expect(file.key).toMatch(/^[-a-zA-Z0-9]+$/);\n      expect(file.remote).toEqual(expect.objectContaining({\n        Bucket: expect.any(String),\n        Key: `${file.key}${file.extname}`,\n      }));\n    });\n  });\n\n  describe('#signedUrl', () => {\n    const url = faker.internet.url();\n\n    describe('when the url can be signed', () => {\n      beforeEach(() => {\n        AWS.mock('S3', 'getSignedUrl', (params, cb) => {\n          expect(params).toEqual(expect.objectContaining({\n            Key: expect.any(String),\n            Bucket: expect.any(String),\n          }));\n          process.nextTick(() => { cb(null, url); });\n        });\n      });\n\n      afterEach(() => {\n        AWS.restore('S3', 'getSignedUrl');\n      });\n\n      it('returns the correct url', () => {\n        const file = new File(artifact, filename);\n        return expect(file.signedUrl()).resolves.toEqual(url);\n      });\n    });\n\n    describe('when the url fails to be signed', () => {\n      beforeEach(() => {\n        AWS.mock('S3', 'getSignedUrl', (params, cb) => {\n          process.nextTick(() => { cb(new Error('TEST')); });\n        });\n      });\n\n      afterEach(() => {\n        AWS.restore('S3', 'getSignedUrl');\n      });\n\n      it('rejects with an error', () => {\n        const file = new File(artifact, filename);\n        return expect(file.signedUrl()).rejects.toEqual(expect.any(Error));\n      });\n    });\n  });\n\n  describe('#read', () => {\n    describe('when the file inside the artifact exists', () => {\n      it('returns the correct data', () => {\n        const file = new File(artifact, filename);\n        return expect(file.read()).resolves.toEqual(new Buffer(data));\n      });\n    });\n\n    describe('when the file inside the artifact does not exist', () => {\n      const invalidArtifactFile = {\n        ready: async () => true,\n        get: async () => { throw new Error('TEST'); },\n      };\n\n      it('rejects with an error', () => {\n        const file = new File(invalidArtifactFile, filename);\n        return expect(file.read()).rejects.toEqual(expect.any(Error));\n      });\n    });\n  });\n\n  describe('#upload', () => {\n    describe('when the file is successfully uploaded', () => {\n      beforeEach(() => {\n        AWS.mock('S3', 'putObject', (params, cb) => {\n          expect(params.Body).toEqual(new Buffer(data));\n          process.nextTick(() => { cb(null, true); });\n        });\n      });\n\n      afterEach(() => {\n        AWS.restore('S3', 'putObject');\n      });\n\n      it('correctly uploads a file', () => {\n        const file = new File(artifact, filename);\n        return expect(file.upload()).resolves.toEqual(true);\n      });\n    });\n\n    describe('when the file fails to upload', () => {\n      beforeEach(() => {\n        AWS.mock('S3', 'putObject', (params, cb) => {\n          process.nextTick(() => { cb(new Error('TEST')); });\n        });\n      });\n\n      afterEach(() => {\n        AWS.restore('S3', 'putObject');\n      });\n\n      it('rejects with an error', () => {\n        const file = new File(artifact, filename);\n        return expect(file.upload()).rejects.toEqual(expect.any(Error));\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/pipeline/pipeline/uploader/file.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 297,
    "kind": "test",
    "name": "describe120",
    "testId": 120,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120",
    "access": null,
    "description": "File",
    "lineNumber": 8
  },
  {
    "__docId__": 298,
    "kind": "test",
    "name": "describe121",
    "testId": 121,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe121",
    "access": null,
    "description": "#new",
    "lineNumber": 18
  },
  {
    "__docId__": 299,
    "kind": "test",
    "name": "it122",
    "testId": 122,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe121",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe121.it122",
    "access": null,
    "description": "sets properties correctly",
    "lineNumber": 19
  },
  {
    "__docId__": 300,
    "kind": "test",
    "name": "describe123",
    "testId": 123,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe123",
    "access": null,
    "description": "#signedUrl",
    "lineNumber": 32
  },
  {
    "__docId__": 301,
    "kind": "test",
    "name": "describe124",
    "testId": 124,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe123",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe123.describe124",
    "access": null,
    "description": "when the url can be signed",
    "lineNumber": 35
  },
  {
    "__docId__": 302,
    "kind": "test",
    "name": "it125",
    "testId": 125,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe123.describe124",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe123.describe124.it125",
    "access": null,
    "description": "returns the correct url",
    "lineNumber": 50
  },
  {
    "__docId__": 303,
    "kind": "test",
    "name": "describe126",
    "testId": 126,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe123",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe123.describe126",
    "access": null,
    "description": "when the url fails to be signed",
    "lineNumber": 56
  },
  {
    "__docId__": 304,
    "kind": "test",
    "name": "it127",
    "testId": 127,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe123.describe126",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe123.describe126.it127",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 67
  },
  {
    "__docId__": 305,
    "kind": "test",
    "name": "describe128",
    "testId": 128,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe128",
    "access": null,
    "description": "#read",
    "lineNumber": 74
  },
  {
    "__docId__": 306,
    "kind": "test",
    "name": "describe129",
    "testId": 129,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe128",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe128.describe129",
    "access": null,
    "description": "when the file inside the artifact exists",
    "lineNumber": 75
  },
  {
    "__docId__": 307,
    "kind": "test",
    "name": "it130",
    "testId": 130,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe128.describe129",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe128.describe129.it130",
    "access": null,
    "description": "returns the correct data",
    "lineNumber": 76
  },
  {
    "__docId__": 308,
    "kind": "test",
    "name": "describe131",
    "testId": 131,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe128",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe128.describe131",
    "access": null,
    "description": "when the file inside the artifact does not exist",
    "lineNumber": 82
  },
  {
    "__docId__": 309,
    "kind": "test",
    "name": "it132",
    "testId": 132,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe128.describe131",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe128.describe131.it132",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 88
  },
  {
    "__docId__": 310,
    "kind": "test",
    "name": "describe133",
    "testId": 133,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe133",
    "access": null,
    "description": "#upload",
    "lineNumber": 95
  },
  {
    "__docId__": 311,
    "kind": "test",
    "name": "describe134",
    "testId": 134,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe133",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe133.describe134",
    "access": null,
    "description": "when the file is successfully uploaded",
    "lineNumber": 96
  },
  {
    "__docId__": 312,
    "kind": "test",
    "name": "it135",
    "testId": 135,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe133.describe134",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe133.describe134.it135",
    "access": null,
    "description": "correctly uploads a file",
    "lineNumber": 108
  },
  {
    "__docId__": 313,
    "kind": "test",
    "name": "describe136",
    "testId": 136,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe133",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe133.describe136",
    "access": null,
    "description": "when the file fails to upload",
    "lineNumber": 114
  },
  {
    "__docId__": 314,
    "kind": "test",
    "name": "it137",
    "testId": 137,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe133.describe136",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/file.test.js~describe120.describe133.describe136.it137",
    "access": null,
    "description": "rejects with an error",
    "lineNumber": 125
  },
  {
    "__docId__": 315,
    "kind": "testFile",
    "name": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport Uploader from '@functions/pipeline/pipeline/uploader';\n\nimport File from '@functions/pipeline/pipeline/uploader/file';\n\nimport faker from 'faker';\n\ndescribe('Uploader', () => {\n  const artifactName = faker.random.word();\n\n  const artifacts = {\n    [artifactName]: {},\n  };\n\n  const files = [\n    `${artifactName}::${faker.system.fileName()}`,\n    `${artifactName}::${faker.system.fileName()}`,\n    `${artifactName}::${faker.system.fileName()}`,\n  ];\n\n  describe('#references', () => {\n    it('should return the correct value', () => {\n      const uploader = new Uploader(files, artifacts);\n      expect(uploader.references).toEqual(files);\n    });\n  });\n\n  describe('#artifacts', () => {\n    it('should return the correct value', () => {\n      const uploader = new Uploader(files, artifacts);\n      expect(uploader.artifacts).toEqual(artifacts);\n    });\n  });\n\n  describe('#files', () => {\n    describe('when the artifact exists', () => {\n      it('should return the correct value', () => {\n        const uploader = new Uploader(files, artifacts);\n        expect(uploader.files()).toEqual(expect.arrayContaining([\n          expect.any(File),\n        ]));\n      });\n    });\n\n    describe('when the artifact does not exist', () => {\n      it('should throw an error', () => {\n        const uploader = new Uploader(files, {});\n        expect(() => { uploader.files(); }).toThrow(Error);\n      });\n    });\n  });\n\n  describe('#urls', () => {\n    describe('when all files can be uploaded', () => {\n      const uploader = new Uploader(files, artifacts);\n\n      const url = faker.internet.url();\n\n      beforeEach(() => {\n        jest.spyOn(uploader, 'files').mockImplementation(() => (\n          [\n            {\n              upload: async () => true,\n              signedUrl: async () => url,\n            },\n          ]\n        ));\n      });\n\n      it('should return the correct value', () =>\n        expect(uploader.urls()).resolves.toEqual(expect.arrayContaining([\n          url,\n        ])));\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/pipeline/pipeline/uploader/uploader.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 316,
    "kind": "test",
    "name": "describe138",
    "testId": 138,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138",
    "access": null,
    "description": "Uploader",
    "lineNumber": 9
  },
  {
    "__docId__": 317,
    "kind": "test",
    "name": "describe139",
    "testId": 139,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe139",
    "access": null,
    "description": "#references",
    "lineNumber": 22
  },
  {
    "__docId__": 318,
    "kind": "test",
    "name": "it140",
    "testId": 140,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe139",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe139.it140",
    "access": null,
    "description": "should return the correct value",
    "lineNumber": 23
  },
  {
    "__docId__": 319,
    "kind": "test",
    "name": "describe141",
    "testId": 141,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe141",
    "access": null,
    "description": "#artifacts",
    "lineNumber": 29
  },
  {
    "__docId__": 320,
    "kind": "test",
    "name": "it142",
    "testId": 142,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe141",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe141.it142",
    "access": null,
    "description": "should return the correct value",
    "lineNumber": 30
  },
  {
    "__docId__": 321,
    "kind": "test",
    "name": "describe143",
    "testId": 143,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe143",
    "access": null,
    "description": "#files",
    "lineNumber": 36
  },
  {
    "__docId__": 322,
    "kind": "test",
    "name": "describe144",
    "testId": 144,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe143",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe143.describe144",
    "access": null,
    "description": "when the artifact exists",
    "lineNumber": 37
  },
  {
    "__docId__": 323,
    "kind": "test",
    "name": "it145",
    "testId": 145,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe143.describe144",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe143.describe144.it145",
    "access": null,
    "description": "should return the correct value",
    "lineNumber": 38
  },
  {
    "__docId__": 324,
    "kind": "test",
    "name": "describe146",
    "testId": 146,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe143",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe143.describe146",
    "access": null,
    "description": "when the artifact does not exist",
    "lineNumber": 46
  },
  {
    "__docId__": 325,
    "kind": "test",
    "name": "it147",
    "testId": 147,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe143.describe146",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe143.describe146.it147",
    "access": null,
    "description": "should throw an error",
    "lineNumber": 47
  },
  {
    "__docId__": 326,
    "kind": "test",
    "name": "describe148",
    "testId": 148,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe148",
    "access": null,
    "description": "#urls",
    "lineNumber": 54
  },
  {
    "__docId__": 327,
    "kind": "test",
    "name": "describe149",
    "testId": 149,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe148",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe148.describe149",
    "access": null,
    "description": "when all files can be uploaded",
    "lineNumber": 55
  },
  {
    "__docId__": 328,
    "kind": "test",
    "name": "it150",
    "testId": 150,
    "memberof": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe148.describe149",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/uploader/uploader.test.js~describe138.describe148.describe149.it150",
    "access": null,
    "description": "should return the correct value",
    "lineNumber": 71
  },
  {
    "__docId__": 329,
    "kind": "testFile",
    "name": "__tests__/functions/pipeline/pipeline/validate/schema.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport Schema from '@functions/pipeline/pipeline/validate/schema';\n\nimport Ajv from 'ajv';\n\ndescribe('Schema', () => {\n  it('compiles successfully', () => {\n    expect(() => { new Ajv().compile(Schema); }).not.toThrow();\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/pipeline/pipeline/validate/schema.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 330,
    "kind": "test",
    "name": "describe151",
    "testId": 151,
    "memberof": "__tests__/functions/pipeline/pipeline/validate/schema.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/validate/schema.test.js~describe151",
    "access": null,
    "description": "Schema",
    "lineNumber": 7
  },
  {
    "__docId__": 331,
    "kind": "test",
    "name": "it152",
    "testId": 152,
    "memberof": "__tests__/functions/pipeline/pipeline/validate/schema.test.js~describe151",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/validate/schema.test.js~describe151.it152",
    "access": null,
    "description": "compiles successfully",
    "lineNumber": 8
  },
  {
    "__docId__": 332,
    "kind": "testFile",
    "name": "__tests__/functions/pipeline/pipeline/validate/validate.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport validate from '@functions/pipeline/pipeline/validate';\n\nimport faker from 'faker';\n\ndescribe('#validate', () => {\n  describe('when a schema is valid', () => {\n    const data = {\n      Flood: {\n        tool: faker.random.arrayElement(['jmeter', 'gatling']),\n      },\n      Files: [\n        'BuildOutput::test-a.jmx',\n        'BuildOutput::test-b.jmx',\n        'BuildOutput::test-c.jmx',\n      ],\n      Grids: [\n        {\n          uuid: faker.random.uuid(),\n        },\n      ],\n    };\n\n    it('resolves with the correct object', () =>\n      expect(validate(data)).resolves.toMatchObject(data));\n  });\n\n  describe('when a schema is invalid', () => {\n    it('rejects on empty schema', () =>\n      expect(validate({})).rejects.toEqual(expect.any(Error)));\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/pipeline/pipeline/validate/validate.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 333,
    "kind": "test",
    "name": "describe153",
    "testId": 153,
    "memberof": "__tests__/functions/pipeline/pipeline/validate/validate.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/validate/validate.test.js~describe153",
    "access": null,
    "description": "#validate",
    "lineNumber": 7
  },
  {
    "__docId__": 334,
    "kind": "test",
    "name": "describe154",
    "testId": 154,
    "memberof": "__tests__/functions/pipeline/pipeline/validate/validate.test.js~describe153",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/validate/validate.test.js~describe153.describe154",
    "access": null,
    "description": "when a schema is valid",
    "lineNumber": 8
  },
  {
    "__docId__": 335,
    "kind": "test",
    "name": "it155",
    "testId": 155,
    "memberof": "__tests__/functions/pipeline/pipeline/validate/validate.test.js~describe153.describe154",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/validate/validate.test.js~describe153.describe154.it155",
    "access": null,
    "description": "resolves with the correct object",
    "lineNumber": 25
  },
  {
    "__docId__": 336,
    "kind": "test",
    "name": "describe156",
    "testId": 156,
    "memberof": "__tests__/functions/pipeline/pipeline/validate/validate.test.js~describe153",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/validate/validate.test.js~describe153.describe156",
    "access": null,
    "description": "when a schema is invalid",
    "lineNumber": 29
  },
  {
    "__docId__": 337,
    "kind": "test",
    "name": "it157",
    "testId": 157,
    "memberof": "__tests__/functions/pipeline/pipeline/validate/validate.test.js~describe153.describe156",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline/validate/validate.test.js~describe153.describe156.it157",
    "access": null,
    "description": "rejects on empty schema",
    "lineNumber": 30
  },
  {
    "__docId__": 338,
    "kind": "testFile",
    "name": "__tests__/functions/pipeline/pipeline.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\n// import Pipeline from '@functions/pipeline';\n\n// import faker from 'faker';\n// import AWS from 'aws-sdk-mock';\n\ndescribe('Pipeline', () => {\n  describe('when the job is starting', () => {\n    // const event = {\n    //   'CodePipeline.Job': {\n    //\n    //   }\n    // };\n\n    describe('when the configuration is valid', () => {\n      test('TODO: Not implemented');\n    });\n\n    describe('when the configuration is invalid', () => {\n      test('TODO: Not implemented');\n    });\n  });\n\n  describe('when the job is resuming', () => {\n    // const event = {\n    //   'CodePipeline.Job': {\n    //\n    //   }\n    // };\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/pipeline/pipeline.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 339,
    "kind": "test",
    "name": "describe158",
    "testId": 158,
    "memberof": "__tests__/functions/pipeline/pipeline.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline.test.js~describe158",
    "access": null,
    "description": "Pipeline",
    "lineNumber": 8
  },
  {
    "__docId__": 340,
    "kind": "test",
    "name": "describe159",
    "testId": 159,
    "memberof": "__tests__/functions/pipeline/pipeline.test.js~describe158",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline.test.js~describe158.describe159",
    "access": null,
    "description": "when the job is starting",
    "lineNumber": 9
  },
  {
    "__docId__": 341,
    "kind": "test",
    "name": "describe160",
    "testId": 160,
    "memberof": "__tests__/functions/pipeline/pipeline.test.js~describe158.describe159",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline.test.js~describe158.describe159.describe160",
    "access": null,
    "description": "when the configuration is valid",
    "lineNumber": 16
  },
  {
    "__docId__": 342,
    "kind": "test",
    "name": "test161",
    "testId": 161,
    "memberof": "__tests__/functions/pipeline/pipeline.test.js~describe158.describe159.describe160",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline.test.js~describe158.describe159.describe160.test161",
    "access": null,
    "description": "TODO: Not implemented",
    "lineNumber": 17
  },
  {
    "__docId__": 343,
    "kind": "test",
    "name": "describe162",
    "testId": 162,
    "memberof": "__tests__/functions/pipeline/pipeline.test.js~describe158.describe159",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline.test.js~describe158.describe159.describe162",
    "access": null,
    "description": "when the configuration is invalid",
    "lineNumber": 20
  },
  {
    "__docId__": 344,
    "kind": "test",
    "name": "test163",
    "testId": 163,
    "memberof": "__tests__/functions/pipeline/pipeline.test.js~describe158.describe159.describe162",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline.test.js~describe158.describe159.describe162.test163",
    "access": null,
    "description": "TODO: Not implemented",
    "lineNumber": 21
  },
  {
    "__docId__": 345,
    "kind": "test",
    "name": "describe164",
    "testId": 164,
    "memberof": "__tests__/functions/pipeline/pipeline.test.js~describe158",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/pipeline/pipeline.test.js~describe158.describe164",
    "access": null,
    "description": "when the job is resuming",
    "lineNumber": 25
  },
  {
    "__docId__": 346,
    "kind": "testFile",
    "name": "__tests__/functions/steps/create/create.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport { handler } from '@functions/steps/create/create';\nimport nock from 'nock';\nimport { FLOOD_API_URI, FLOODS_PATH } from '@functions/globals';\nimport request from 'request-promise-native';\nimport fs from 'fs';\n\nconst mockDownloadPath = 'https://s3-eu-west-1.amazonaws.com/floodfiles/mockfilename.jmx';\n\nconst mockEvent = {\n  files: [\n    mockDownloadPath,\n  ],\n  flood: {\n    tool: 'jmeter',\n    grids: [\n      {\n        region: 'eu-west-1',\n        instance_type: 'm4.xlarge',\n        stop_after: '60',\n        infrastructure: 'demand',\n      },\n    ],\n  },\n};\n\nconst mockResponse = JSON.stringify({\n  uuid: 'IIf79FZ7pP3y5yFRXgvqbw',\n  status: 'queued',\n  _embedded: {\n    grids: [\n      {\n        uuid: 'rNYbrpY0jOzqnl3buVNoJA',\n      },\n    ],\n  },\n});\n\nlet requestSpy;\nlet postSpy;\nlet fsSpy;\nlet callbackSpy;\n\nbeforeAll(() => {\n  nock.disableNetConnect();\n  requestSpy = jest.spyOn(request, 'get');\n  postSpy = jest.spyOn(request, 'post');\n  fsSpy = jest.spyOn(fs, 'writeFile');\n});\n\nafterAll(() => {\n  nock.enableNetConnect();\n});\n\ndescribe('Create Flood suite', () => {\n  describe('Handles success', () => {\n    beforeAll(done => {\n      nock('https://s3-eu-west-1.amazonaws.com/floodfiles')\n        .get('/mockfilename.jmx')\n        .replyWithFile(200, './__tests__/functions/steps/create/mock/floodtest.jmx');\n\n      nock(FLOOD_API_URI)\n        .post(FLOODS_PATH)\n        .reply(200, mockResponse);\n\n      callbackSpy = jest.fn().mockImplementation(() => {\n        done();\n      });\n\n      handler(Object.assign({}, mockEvent), null, callbackSpy);\n    });\n\n    afterAll(() => {\n      nock.cleanAll();\n      requestSpy.mockReset();\n      postSpy.mockReset();\n      fsSpy.mockReset();\n    });\n\n    describe('Calling handler', () => {\n      it('Downloaded floodfiles', () => {\n        expect(requestSpy.mock.calls).toMatchSnapshot();\n      });\n\n      it('Wrote floodfiles to tmp', () => {\n        expect(fsSpy).toHaveBeenCalled();\n        expect(fs.readdirSync('/tmp')).toEqual(expect.stringContaining('mockfilename.jmx'));\n      });\n\n      it('Posted files to flood.io', () => {\n        expect(JSON.stringify(postSpy.mock.calls)).toMatchSnapshot();\n      });\n    });\n  });\n\n  describe('Handles failure when downloading', () => {\n    beforeAll((done) => {\n      nock('https://s3-eu-west-1.amazonaws.com/floodfiles')\n        .get('/mockfilename.jmx')\n        .reply(404);\n\n      callbackSpy = jest.fn().mockImplementation(() => {\n        done();\n      });\n\n      handler(mockEvent, null, callbackSpy);\n    });\n\n    afterAll(() => {\n      nock.cleanAll();\n      requestSpy.mockReset();\n      postSpy.mockReset();\n      fsSpy.mockReset();\n    });\n\n    describe('Calling handler', () => {\n      it('Tried to download floodfiles', () => {\n        expect(requestSpy.mock.calls).toMatchSnapshot();\n      });\n\n      it('Did not write files', () => {\n        expect(fsSpy).not.toHaveBeenCalled();\n      });\n\n      it('Did not post to flood.io', () => {\n        expect(postSpy).not.toHaveBeenCalled();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/steps/create/create.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 347,
    "kind": "test",
    "name": "describe165",
    "testId": 165,
    "memberof": "__tests__/functions/steps/create/create.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165",
    "access": null,
    "description": "Create Flood suite",
    "lineNumber": 56
  },
  {
    "__docId__": 348,
    "kind": "test",
    "name": "describe166",
    "testId": 166,
    "memberof": "__tests__/functions/steps/create/create.test.js~describe165",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165.describe166",
    "access": null,
    "description": "Handles success",
    "lineNumber": 57
  },
  {
    "__docId__": 349,
    "kind": "test",
    "name": "describe167",
    "testId": 167,
    "memberof": "__tests__/functions/steps/create/create.test.js~describe165.describe166",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165.describe166.describe167",
    "access": null,
    "description": "Calling handler",
    "lineNumber": 81
  },
  {
    "__docId__": 350,
    "kind": "test",
    "name": "it168",
    "testId": 168,
    "memberof": "__tests__/functions/steps/create/create.test.js~describe165.describe166.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165.describe166.describe167.it168",
    "access": null,
    "description": "Downloaded floodfiles",
    "lineNumber": 82
  },
  {
    "__docId__": 351,
    "kind": "test",
    "name": "it169",
    "testId": 169,
    "memberof": "__tests__/functions/steps/create/create.test.js~describe165.describe166.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165.describe166.describe167.it169",
    "access": null,
    "description": "Wrote floodfiles to tmp",
    "lineNumber": 86
  },
  {
    "__docId__": 352,
    "kind": "test",
    "name": "it170",
    "testId": 170,
    "memberof": "__tests__/functions/steps/create/create.test.js~describe165.describe166.describe167",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165.describe166.describe167.it170",
    "access": null,
    "description": "Posted files to flood.io",
    "lineNumber": 91
  },
  {
    "__docId__": 353,
    "kind": "test",
    "name": "describe171",
    "testId": 171,
    "memberof": "__tests__/functions/steps/create/create.test.js~describe165",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165.describe171",
    "access": null,
    "description": "Handles failure when downloading",
    "lineNumber": 97
  },
  {
    "__docId__": 354,
    "kind": "test",
    "name": "describe172",
    "testId": 172,
    "memberof": "__tests__/functions/steps/create/create.test.js~describe165.describe171",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165.describe171.describe172",
    "access": null,
    "description": "Calling handler",
    "lineNumber": 117
  },
  {
    "__docId__": 355,
    "kind": "test",
    "name": "it173",
    "testId": 173,
    "memberof": "__tests__/functions/steps/create/create.test.js~describe165.describe171.describe172",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165.describe171.describe172.it173",
    "access": null,
    "description": "Tried to download floodfiles",
    "lineNumber": 118
  },
  {
    "__docId__": 356,
    "kind": "test",
    "name": "it174",
    "testId": 174,
    "memberof": "__tests__/functions/steps/create/create.test.js~describe165.describe171.describe172",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165.describe171.describe172.it174",
    "access": null,
    "description": "Did not write files",
    "lineNumber": 122
  },
  {
    "__docId__": 357,
    "kind": "test",
    "name": "it175",
    "testId": 175,
    "memberof": "__tests__/functions/steps/create/create.test.js~describe165.describe171.describe172",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/create/create.test.js~describe165.describe171.describe172.it175",
    "access": null,
    "description": "Did not post to flood.io",
    "lineNumber": 126
  },
  {
    "__docId__": 358,
    "kind": "testFile",
    "name": "__tests__/functions/steps/helper.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport { parseFloodResponse, transformObjectProps } from '@functions/steps/helper';\nimport mockResponse from './mock/mockresponse.json';\n\nconst mockFloodProps = {\n  flood: {\n    tool: 'jmeter',\n    grids: [\n      {\n        region: 'eu-west-1',\n        instance_type: 'm4.xlarge',\n        stop_after: '60',\n        infrastructure: 'demand',\n      },\n    ],\n  },\n};\n\ndescribe('Helper suite', () => {\n  describe('parseFloodResponse', () => {\n    it('Extracts the correct props and returns a new object', () => {\n      expect(parseFloodResponse(mockResponse)).toMatchSnapshot();\n    });\n  });\n\n  describe('transformObjectProps', () => {\n    it('Remaps the object properties to match a form', () => {\n      expect(transformObjectProps(mockFloodProps)).toMatchSnapshot();\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/steps/helper.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 359,
    "kind": "test",
    "name": "describe176",
    "testId": 176,
    "memberof": "__tests__/functions/steps/helper.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/steps/helper.test.js~describe176",
    "access": null,
    "description": "Helper suite",
    "lineNumber": 20
  },
  {
    "__docId__": 360,
    "kind": "test",
    "name": "describe177",
    "testId": 177,
    "memberof": "__tests__/functions/steps/helper.test.js~describe176",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/steps/helper.test.js~describe176.describe177",
    "access": null,
    "description": "parseFloodResponse",
    "lineNumber": 21
  },
  {
    "__docId__": 361,
    "kind": "test",
    "name": "it178",
    "testId": 178,
    "memberof": "__tests__/functions/steps/helper.test.js~describe176.describe177",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/steps/helper.test.js~describe176.describe177.it178",
    "access": null,
    "description": "Extracts the correct props and returns a new object",
    "lineNumber": 22
  },
  {
    "__docId__": 362,
    "kind": "test",
    "name": "describe179",
    "testId": 179,
    "memberof": "__tests__/functions/steps/helper.test.js~describe176",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/steps/helper.test.js~describe176.describe179",
    "access": null,
    "description": "transformObjectProps",
    "lineNumber": 27
  },
  {
    "__docId__": 363,
    "kind": "test",
    "name": "it180",
    "testId": 180,
    "memberof": "__tests__/functions/steps/helper.test.js~describe176.describe179",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/steps/helper.test.js~describe176.describe179.it180",
    "access": null,
    "description": "Remaps the object properties to match a form",
    "lineNumber": 28
  },
  {
    "__docId__": 364,
    "kind": "testFile",
    "name": "__tests__/functions/steps/remove/remove.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport request from 'request-promise-native';\nimport { handler } from '@functions/steps/remove/remove';\nimport nock from 'nock';\nimport { FLOOD_API_URI, GRIDS_PATH } from '@functions/globals';\n\nconst mockResponse = {\n  result: 'mock',\n};\nconst mockUUID = '123123';\n\nlet requestSpy;\nlet callbackSpy;\n\nbeforeAll(() => {\n  nock.disableNetConnect();\n  requestSpy = jest.spyOn(request, 'delete');\n});\n\nafterAll(() => {\n  nock.enableNetConnect();\n});\n\ndescribe('Remove grid suite', () => {\n  describe('Handles successful query', () => {\n    beforeEach((done) => {\n      nock(`${FLOOD_API_URI}${GRIDS_PATH}`)\n        .delete(`/${mockUUID}`)\n        .reply(200, mockResponse, { 'Content-Type': 'application/json' });\n\n      callbackSpy = jest.fn().mockImplementation(() => {\n        done();\n      });\n\n      handler({\n        grid: {\n          uuid: mockUUID,\n        },\n      }, null, callbackSpy);\n    });\n\n    describe('Calling handler', () => {\n      it('Called endpoint to remove grid', () => {\n        expect(requestSpy.mock.calls).toMatchSnapshot();\n      });\n\n      it('Invoked callback', () => {\n        expect(callbackSpy.mock.calls).toMatchSnapshot();\n      });\n    });\n  });\n\n  describe('Handles unsuccesful response ', () => {\n    beforeEach((done) => {\n      nock(`${FLOOD_API_URI}${GRIDS_PATH}`)\n        .delete(`/${mockUUID}`)\n        .reply(404);\n\n      callbackSpy = jest.fn().mockImplementation(() => {\n        done();\n      });\n\n      handler({\n        grid: {\n          uuid: mockUUID,\n        },\n      }, null, callbackSpy);\n    });\n\n    describe('Calling handler', () => {\n      it('Returned the error to the callback', () => {\n        expect(callbackSpy.mock.calls).toMatchSnapshot();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/steps/remove/remove.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 365,
    "kind": "test",
    "name": "describe181",
    "testId": 181,
    "memberof": "__tests__/functions/steps/remove/remove.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/steps/remove/remove.test.js~describe181",
    "access": null,
    "description": "Remove grid suite",
    "lineNumber": 25
  },
  {
    "__docId__": 366,
    "kind": "test",
    "name": "describe182",
    "testId": 182,
    "memberof": "__tests__/functions/steps/remove/remove.test.js~describe181",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/steps/remove/remove.test.js~describe181.describe182",
    "access": null,
    "description": "Handles successful query",
    "lineNumber": 26
  },
  {
    "__docId__": 367,
    "kind": "test",
    "name": "describe183",
    "testId": 183,
    "memberof": "__tests__/functions/steps/remove/remove.test.js~describe181.describe182",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/steps/remove/remove.test.js~describe181.describe182.describe183",
    "access": null,
    "description": "Calling handler",
    "lineNumber": 43
  },
  {
    "__docId__": 368,
    "kind": "test",
    "name": "it184",
    "testId": 184,
    "memberof": "__tests__/functions/steps/remove/remove.test.js~describe181.describe182.describe183",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/remove/remove.test.js~describe181.describe182.describe183.it184",
    "access": null,
    "description": "Called endpoint to remove grid",
    "lineNumber": 44
  },
  {
    "__docId__": 369,
    "kind": "test",
    "name": "it185",
    "testId": 185,
    "memberof": "__tests__/functions/steps/remove/remove.test.js~describe181.describe182.describe183",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/remove/remove.test.js~describe181.describe182.describe183.it185",
    "access": null,
    "description": "Invoked callback",
    "lineNumber": 48
  },
  {
    "__docId__": 370,
    "kind": "test",
    "name": "describe186",
    "testId": 186,
    "memberof": "__tests__/functions/steps/remove/remove.test.js~describe181",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/steps/remove/remove.test.js~describe181.describe186",
    "access": null,
    "description": "Handles unsuccesful response ",
    "lineNumber": 54
  },
  {
    "__docId__": 371,
    "kind": "test",
    "name": "describe187",
    "testId": 187,
    "memberof": "__tests__/functions/steps/remove/remove.test.js~describe181.describe186",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/steps/remove/remove.test.js~describe181.describe186.describe187",
    "access": null,
    "description": "Calling handler",
    "lineNumber": 71
  },
  {
    "__docId__": 372,
    "kind": "test",
    "name": "it188",
    "testId": 188,
    "memberof": "__tests__/functions/steps/remove/remove.test.js~describe181.describe186.describe187",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/remove/remove.test.js~describe181.describe186.describe187.it188",
    "access": null,
    "description": "Returned the error to the callback",
    "lineNumber": 72
  },
  {
    "__docId__": 373,
    "kind": "testFile",
    "name": "__tests__/functions/steps/results/results.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport request from 'request-promise-native';\nimport { handler } from '@functions/steps/results/results';\nimport nock from 'nock';\nimport { FLOOD_API_URI, FLOODS_PATH } from '@functions/globals';\n\nconst mockResponse = {\n  summary: 'mock',\n};\nconst mockUUID = '123123';\n\nlet requestSpy;\nlet callbackSpy;\n\nbeforeAll(() => {\n  nock.disableNetConnect();\n  requestSpy = jest.spyOn(request, 'get');\n});\n\nafterAll(() => {\n  nock.enableNetConnect();\n});\n\ndescribe('Result of flood suite', () => {\n  describe('Handles successful query', () => {\n    beforeEach((done) => {\n      nock(`${FLOOD_API_URI}${FLOODS_PATH}/${mockUUID}`)\n        .get('/report')\n        .reply(200, mockResponse, { 'Content-Type': 'application/json' });\n\n      callbackSpy = jest.fn().mockImplementation(() => {\n        done();\n      });\n\n      handler({\n        flood: {\n          uuid: mockUUID,\n        },\n      }, null, callbackSpy);\n    });\n\n    describe('Calling handler', () => {\n      it('Requested the flood results', () => {\n        expect(requestSpy.mock.calls).toMatchSnapshot();\n      });\n\n      it('Returned the summary to the callback', () => {\n        expect(callbackSpy.mock.calls).toMatchSnapshot();\n      });\n    });\n  });\n\n  describe('Handles unsuccesful response ', () => {\n    beforeEach((done) => {\n      nock(`${FLOOD_API_URI}${FLOODS_PATH}/${mockUUID}`)\n        .get('/report')\n        .reply(404);\n\n      callbackSpy = jest.fn().mockImplementation(() => {\n        done();\n      });\n\n      handler({\n        flood: {\n          uuid: mockUUID,\n        },\n      }, null, callbackSpy);\n    });\n\n    describe('Calling handler', () => {\n      it('Returned the error to the callback', () => {\n        expect(callbackSpy.mock.calls).toMatchSnapshot();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/steps/results/results.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 374,
    "kind": "test",
    "name": "describe189",
    "testId": 189,
    "memberof": "__tests__/functions/steps/results/results.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/steps/results/results.test.js~describe189",
    "access": null,
    "description": "Result of flood suite",
    "lineNumber": 25
  },
  {
    "__docId__": 375,
    "kind": "test",
    "name": "describe190",
    "testId": 190,
    "memberof": "__tests__/functions/steps/results/results.test.js~describe189",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/steps/results/results.test.js~describe189.describe190",
    "access": null,
    "description": "Handles successful query",
    "lineNumber": 26
  },
  {
    "__docId__": 376,
    "kind": "test",
    "name": "describe191",
    "testId": 191,
    "memberof": "__tests__/functions/steps/results/results.test.js~describe189.describe190",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/steps/results/results.test.js~describe189.describe190.describe191",
    "access": null,
    "description": "Calling handler",
    "lineNumber": 43
  },
  {
    "__docId__": 377,
    "kind": "test",
    "name": "it192",
    "testId": 192,
    "memberof": "__tests__/functions/steps/results/results.test.js~describe189.describe190.describe191",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/results/results.test.js~describe189.describe190.describe191.it192",
    "access": null,
    "description": "Requested the flood results",
    "lineNumber": 44
  },
  {
    "__docId__": 378,
    "kind": "test",
    "name": "it193",
    "testId": 193,
    "memberof": "__tests__/functions/steps/results/results.test.js~describe189.describe190.describe191",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/results/results.test.js~describe189.describe190.describe191.it193",
    "access": null,
    "description": "Returned the summary to the callback",
    "lineNumber": 48
  },
  {
    "__docId__": 379,
    "kind": "test",
    "name": "describe194",
    "testId": 194,
    "memberof": "__tests__/functions/steps/results/results.test.js~describe189",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/steps/results/results.test.js~describe189.describe194",
    "access": null,
    "description": "Handles unsuccesful response ",
    "lineNumber": 54
  },
  {
    "__docId__": 380,
    "kind": "test",
    "name": "describe195",
    "testId": 195,
    "memberof": "__tests__/functions/steps/results/results.test.js~describe189.describe194",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/steps/results/results.test.js~describe189.describe194.describe195",
    "access": null,
    "description": "Calling handler",
    "lineNumber": 71
  },
  {
    "__docId__": 381,
    "kind": "test",
    "name": "it196",
    "testId": 196,
    "memberof": "__tests__/functions/steps/results/results.test.js~describe189.describe194.describe195",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/results/results.test.js~describe189.describe194.describe195.it196",
    "access": null,
    "description": "Returned the error to the callback",
    "lineNumber": 72
  },
  {
    "__docId__": 382,
    "kind": "testFile",
    "name": "__tests__/functions/steps/status/status.test.js",
    "content": "/* eslint-disable import/no-unresolved */\n\nimport request from 'request-promise-native';\nimport { handler } from '@functions/steps/status/status';\nimport nock from 'nock';\nimport { FLOOD_API_URI, FLOODS_PATH } from '@functions/globals';\n\nconst mockUUID = 'IIf79FZ7pP3y5yFRXgvqbw';\nconst mockResponse = JSON.stringify({\n  uuid: mockUUID,\n  status: 'queued',\n  _embedded: {\n    grids: [\n      {\n        uuid: 'rNYbrpY0jOzqnl3buVNoJA',\n      },\n    ],\n  },\n});\n\n\nbeforeEach(() => {\n  nock.disableNetConnect();\n});\n\nafterEach(() => {\n  nock.enableNetConnect();\n});\n\ndescribe('Status of flood suite', () => {\n  const requestSpy = jest.spyOn(request, 'get');\n  let callbackSpy;\n\n\n  describe('Handles successful query', () => {\n    beforeEach((done) => {\n      nock(`${FLOOD_API_URI}${FLOODS_PATH}`)\n        .get(`/${mockUUID}`)\n        .reply(200, mockResponse, { 'Content-Type': 'application/json' });\n\n      callbackSpy = jest.fn().mockImplementation(() => {\n        done();\n      });\n\n      handler({\n        flood: {\n          uuid: mockUUID,\n        },\n      }, null, callbackSpy);\n    });\n\n    describe('Calling handler', () => {\n      it('Retrieved flood status', () => {\n        expect(requestSpy.mock.calls).toMatchSnapshot();\n      });\n\n      it('Returned the status to the callback', () => {\n        expect(callbackSpy.mock.calls).toMatchSnapshot();\n      });\n    });\n  });\n\n  describe('Handles unsuccesful response ', () => {\n    beforeEach((done) => {\n      nock(`${FLOOD_API_URI}${FLOODS_PATH}`)\n        .get(`/${mockUUID}`)\n        .reply(404);\n\n      callbackSpy = jest.fn().mockImplementation(() => {\n        done();\n      });\n\n      handler({\n        flood: {\n          uuid: mockUUID,\n        },\n      }, null, callbackSpy);\n    });\n\n    describe('Calling handler', () => {\n      it('Returned the status to the callback', () => {\n        expect(callbackSpy.mock.calls).toMatchSnapshot();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/davidk/github.com/notonthehighstreet/aws-pipeline-flood/__tests__/functions/steps/status/status.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 383,
    "kind": "test",
    "name": "describe197",
    "testId": 197,
    "memberof": "__tests__/functions/steps/status/status.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "__tests__/functions/steps/status/status.test.js~describe197",
    "access": null,
    "description": "Status of flood suite",
    "lineNumber": 30
  },
  {
    "__docId__": 384,
    "kind": "test",
    "name": "describe198",
    "testId": 198,
    "memberof": "__tests__/functions/steps/status/status.test.js~describe197",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/steps/status/status.test.js~describe197.describe198",
    "access": null,
    "description": "Handles successful query",
    "lineNumber": 35
  },
  {
    "__docId__": 385,
    "kind": "test",
    "name": "describe199",
    "testId": 199,
    "memberof": "__tests__/functions/steps/status/status.test.js~describe197.describe198",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/steps/status/status.test.js~describe197.describe198.describe199",
    "access": null,
    "description": "Calling handler",
    "lineNumber": 52
  },
  {
    "__docId__": 386,
    "kind": "test",
    "name": "it200",
    "testId": 200,
    "memberof": "__tests__/functions/steps/status/status.test.js~describe197.describe198.describe199",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/status/status.test.js~describe197.describe198.describe199.it200",
    "access": null,
    "description": "Retrieved flood status",
    "lineNumber": 53
  },
  {
    "__docId__": 387,
    "kind": "test",
    "name": "it201",
    "testId": 201,
    "memberof": "__tests__/functions/steps/status/status.test.js~describe197.describe198.describe199",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/status/status.test.js~describe197.describe198.describe199.it201",
    "access": null,
    "description": "Returned the status to the callback",
    "lineNumber": 57
  },
  {
    "__docId__": 388,
    "kind": "test",
    "name": "describe202",
    "testId": 202,
    "memberof": "__tests__/functions/steps/status/status.test.js~describe197",
    "testDepth": 1,
    "static": true,
    "longname": "__tests__/functions/steps/status/status.test.js~describe197.describe202",
    "access": null,
    "description": "Handles unsuccesful response ",
    "lineNumber": 63
  },
  {
    "__docId__": 389,
    "kind": "test",
    "name": "describe203",
    "testId": 203,
    "memberof": "__tests__/functions/steps/status/status.test.js~describe197.describe202",
    "testDepth": 2,
    "static": true,
    "longname": "__tests__/functions/steps/status/status.test.js~describe197.describe202.describe203",
    "access": null,
    "description": "Calling handler",
    "lineNumber": 80
  },
  {
    "__docId__": 390,
    "kind": "test",
    "name": "it204",
    "testId": 204,
    "memberof": "__tests__/functions/steps/status/status.test.js~describe197.describe202.describe203",
    "testDepth": 3,
    "static": true,
    "longname": "__tests__/functions/steps/status/status.test.js~describe197.describe202.describe203.it204",
    "access": null,
    "description": "Returned the status to the callback",
    "lineNumber": 81
  }
]